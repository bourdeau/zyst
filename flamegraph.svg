<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="534" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="517.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="517.00"> </text><svg id="frames" x="10" width="1180" total_samples="89017751082"><g><title>__send (17,179,117 samples, 0.02%)</title><rect x="0.0218%" y="437" width="0.0193%" height="15" fill="rgb(227,0,7)" fg:x="19442407" fg:w="17179117"/><text x="0.2718%" y="447.50"></text></g><g><title>[unknown] (17,179,117 samples, 0.02%)</title><rect x="0.0218%" y="421" width="0.0193%" height="15" fill="rgb(217,0,24)" fg:x="19442407" fg:w="17179117"/><text x="0.2718%" y="431.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (10,523,898 samples, 0.01%)</title><rect x="0.0434%" y="437" width="0.0118%" height="15" fill="rgb(221,193,54)" fg:x="38638757" fg:w="10523898"/><text x="0.2934%" y="447.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (10,523,898 samples, 0.01%)</title><rect x="0.0434%" y="421" width="0.0118%" height="15" fill="rgb(248,212,6)" fg:x="38638757" fg:w="10523898"/><text x="0.2934%" y="431.50"></text></g><g><title>__send (10,523,898 samples, 0.01%)</title><rect x="0.0434%" y="405" width="0.0118%" height="15" fill="rgb(208,68,35)" fg:x="38638757" fg:w="10523898"/><text x="0.2934%" y="415.50"></text></g><g><title>[unknown] (10,523,898 samples, 0.01%)</title><rect x="0.0434%" y="389" width="0.0118%" height="15" fill="rgb(232,128,0)" fg:x="38638757" fg:w="10523898"/><text x="0.2934%" y="399.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (24,092,086 samples, 0.03%)</title><rect x="0.0600%" y="437" width="0.0271%" height="15" fill="rgb(207,160,47)" fg:x="53394761" fg:w="24092086"/><text x="0.3100%" y="447.50"></text></g><g><title>std::fs::OpenOptions::_open (24,092,086 samples, 0.03%)</title><rect x="0.0600%" y="421" width="0.0271%" height="15" fill="rgb(228,23,34)" fg:x="53394761" fg:w="24092086"/><text x="0.3100%" y="431.50"></text></g><g><title>_ZN3std3sys3pal4unix2fs4File4open28_$u7b$$u7b$closure$u7d$$u7d$17h7ad264f52e504b10E.llvm.12208559908432827118 (24,092,086 samples, 0.03%)</title><rect x="0.0600%" y="405" width="0.0271%" height="15" fill="rgb(218,30,26)" fg:x="53394761" fg:w="24092086"/><text x="0.3100%" y="415.50"></text></g><g><title>std::sys::pal::unix::fs::File::open_c (24,092,086 samples, 0.03%)</title><rect x="0.0600%" y="389" width="0.0271%" height="15" fill="rgb(220,122,19)" fg:x="53394761" fg:w="24092086"/><text x="0.3100%" y="399.50"></text></g><g><title>__GI___libc_open (24,092,086 samples, 0.03%)</title><rect x="0.0600%" y="373" width="0.0271%" height="15" fill="rgb(250,228,42)" fg:x="53394761" fg:w="24092086"/><text x="0.3100%" y="383.50"></text></g><g><title>[unknown] (24,092,086 samples, 0.03%)</title><rect x="0.0600%" y="357" width="0.0271%" height="15" fill="rgb(240,193,28)" fg:x="53394761" fg:w="24092086"/><text x="0.3100%" y="367.50"></text></g><g><title>[[heap]] (64,039,126 samples, 0.07%)</title><rect x="0.0157%" y="453" width="0.0719%" height="15" fill="rgb(216,20,37)" fg:x="13970373" fg:w="64039126"/><text x="0.2657%" y="463.50"></text></g><g><title>__close (34,240,599 samples, 0.04%)</title><rect x="0.0876%" y="437" width="0.0385%" height="15" fill="rgb(206,188,39)" fg:x="78012638" fg:w="34240599"/><text x="0.3376%" y="447.50"></text></g><g><title>[unknown] (34,240,599 samples, 0.04%)</title><rect x="0.0876%" y="421" width="0.0385%" height="15" fill="rgb(217,207,13)" fg:x="78012638" fg:w="34240599"/><text x="0.3376%" y="431.50"></text></g><g><title>syscall (90,850,246 samples, 0.10%)</title><rect x="0.1361%" y="437" width="0.1021%" height="15" fill="rgb(231,73,38)" fg:x="121185831" fg:w="90850246"/><text x="0.3861%" y="447.50"></text></g><g><title>[unknown] (90,850,246 samples, 0.10%)</title><rect x="0.1361%" y="421" width="0.1021%" height="15" fill="rgb(225,20,46)" fg:x="121185831" fg:w="90850246"/><text x="0.3861%" y="431.50"></text></g><g><title>[anon] (164,106,089 samples, 0.18%)</title><rect x="0.0876%" y="453" width="0.1844%" height="15" fill="rgb(210,31,41)" fg:x="78009499" fg:w="164106089"/><text x="0.3376%" y="463.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (21,651,062 samples, 0.02%)</title><rect x="0.2477%" y="437" width="0.0243%" height="15" fill="rgb(221,200,47)" fg:x="220464526" fg:w="21651062"/><text x="0.4977%" y="447.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (21,651,062 samples, 0.02%)</title><rect x="0.2477%" y="421" width="0.0243%" height="15" fill="rgb(226,26,5)" fg:x="220464526" fg:w="21651062"/><text x="0.4977%" y="431.50"></text></g><g><title>__send (21,651,062 samples, 0.02%)</title><rect x="0.2477%" y="405" width="0.0243%" height="15" fill="rgb(249,33,26)" fg:x="220464526" fg:w="21651062"/><text x="0.4977%" y="415.50"></text></g><g><title>[unknown] (21,651,062 samples, 0.02%)</title><rect x="0.2477%" y="389" width="0.0243%" height="15" fill="rgb(235,183,28)" fg:x="220464526" fg:w="21651062"/><text x="0.4977%" y="399.50"></text></g><g><title>&lt;tokio::fs::file::File as tokio::io::async_write::AsyncWrite&gt;::poll_write (35,325,717 samples, 0.04%)</title><rect x="0.2972%" y="437" width="0.0397%" height="15" fill="rgb(221,5,38)" fg:x="264554171" fg:w="35325717"/><text x="0.5472%" y="447.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_mandatory_blocking (35,325,717 samples, 0.04%)</title><rect x="0.2972%" y="421" width="0.0397%" height="15" fill="rgb(247,18,42)" fg:x="264554171" fg:w="35325717"/><text x="0.5472%" y="431.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (35,325,717 samples, 0.04%)</title><rect x="0.2972%" y="405" width="0.0397%" height="15" fill="rgb(241,131,45)" fg:x="264554171" fg:w="35325717"/><text x="0.5472%" y="415.50"></text></g><g><title>syscall (35,325,717 samples, 0.04%)</title><rect x="0.2972%" y="389" width="0.0397%" height="15" fill="rgb(249,31,29)" fg:x="264554171" fg:w="35325717"/><text x="0.5472%" y="399.50"></text></g><g><title>[unknown] (35,325,717 samples, 0.04%)</title><rect x="0.2972%" y="373" width="0.0397%" height="15" fill="rgb(225,111,53)" fg:x="264554171" fg:w="35325717"/><text x="0.5472%" y="383.50"></text></g><g><title>__libc_recv (43,244,728 samples, 0.05%)</title><rect x="0.3370%" y="437" width="0.0486%" height="15" fill="rgb(238,160,17)" fg:x="300014697" fg:w="43244728"/><text x="0.5870%" y="447.50"></text></g><g><title>[unknown] (43,244,728 samples, 0.05%)</title><rect x="0.3370%" y="421" width="0.0486%" height="15" fill="rgb(214,148,48)" fg:x="300014697" fg:w="43244728"/><text x="0.5870%" y="431.50"></text></g><g><title>__send (15,946,645 samples, 0.02%)</title><rect x="0.3893%" y="437" width="0.0179%" height="15" fill="rgb(232,36,49)" fg:x="346571423" fg:w="15946645"/><text x="0.6393%" y="447.50"></text></g><g><title>[unknown] (15,946,645 samples, 0.02%)</title><rect x="0.3893%" y="421" width="0.0179%" height="15" fill="rgb(209,103,24)" fg:x="346571423" fg:w="15946645"/><text x="0.6393%" y="431.50"></text></g><g><title>statx (68,790,943 samples, 0.08%)</title><rect x="0.4167%" y="437" width="0.0773%" height="15" fill="rgb(229,88,8)" fg:x="370938285" fg:w="68790943"/><text x="0.6667%" y="447.50"></text></g><g><title>[unknown] (68,790,943 samples, 0.08%)</title><rect x="0.4167%" y="421" width="0.0773%" height="15" fill="rgb(213,181,19)" fg:x="370938285" fg:w="68790943"/><text x="0.6667%" y="431.50"></text></g><g><title>std::time::Instant::saturating_duration_since (86,395,664 samples, 0.10%)</title><rect x="0.4940%" y="437" width="0.0971%" height="15" fill="rgb(254,191,54)" fg:x="439729228" fg:w="86395664"/><text x="0.7440%" y="447.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (86,395,664 samples, 0.10%)</title><rect x="0.4940%" y="421" width="0.0971%" height="15" fill="rgb(241,83,37)" fg:x="439729228" fg:w="86395664"/><text x="0.7440%" y="431.50"></text></g><g><title>epoll_wait (86,395,664 samples, 0.10%)</title><rect x="0.4940%" y="405" width="0.0971%" height="15" fill="rgb(233,36,39)" fg:x="439729228" fg:w="86395664"/><text x="0.7440%" y="415.50"></text></g><g><title>[unknown] (86,395,664 samples, 0.10%)</title><rect x="0.4940%" y="389" width="0.0971%" height="15" fill="rgb(226,3,54)" fg:x="439729228" fg:w="86395664"/><text x="0.7440%" y="399.50"></text></g><g><title>[unknown] (302,412,309 samples, 0.34%)</title><rect x="0.2720%" y="453" width="0.3397%" height="15" fill="rgb(245,192,40)" fg:x="242115588" fg:w="302412309"/><text x="0.5220%" y="463.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_mandatory_blocking (15,762,244 samples, 0.02%)</title><rect x="0.5940%" y="437" width="0.0177%" height="15" fill="rgb(238,167,29)" fg:x="528765653" fg:w="15762244"/><text x="0.8440%" y="447.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (15,762,244 samples, 0.02%)</title><rect x="0.5940%" y="421" width="0.0177%" height="15" fill="rgb(232,182,51)" fg:x="528765653" fg:w="15762244"/><text x="0.8440%" y="431.50"></text></g><g><title>syscall (15,762,244 samples, 0.02%)</title><rect x="0.5940%" y="405" width="0.0177%" height="15" fill="rgb(231,60,39)" fg:x="528765653" fg:w="15762244"/><text x="0.8440%" y="415.50"></text></g><g><title>[unknown] (15,762,244 samples, 0.02%)</title><rect x="0.5940%" y="389" width="0.0177%" height="15" fill="rgb(208,69,12)" fg:x="528765653" fg:w="15762244"/><text x="0.8440%" y="399.50"></text></g><g><title>_int_free_maybe_consolidate.part.0 (59,623,993 samples, 0.07%)</title><rect x="1.4421%" y="325" width="0.0670%" height="15" fill="rgb(235,93,37)" fg:x="1283745071" fg:w="59623993"/><text x="1.6921%" y="335.50"></text></g><g><title>malloc_consolidate (58,134,287 samples, 0.07%)</title><rect x="1.4438%" y="309" width="0.0653%" height="15" fill="rgb(213,116,39)" fg:x="1285234777" fg:w="58134287"/><text x="1.6938%" y="319.50"></text></g><g><title>_int_free_create_chunk (17,194,531 samples, 0.02%)</title><rect x="1.5264%" y="309" width="0.0193%" height="15" fill="rgb(222,207,29)" fg:x="1358761391" fg:w="17194531"/><text x="1.7764%" y="319.50"></text></g><g><title>cfree@GLIBC_2.2.5 (202,241,095 samples, 0.23%)</title><rect x="1.3391%" y="357" width="0.2272%" height="15" fill="rgb(206,96,30)" fg:x="1192021782" fg:w="202241095"/><text x="1.5891%" y="367.50"></text></g><g><title>_int_free (197,787,964 samples, 0.22%)</title><rect x="1.3441%" y="341" width="0.2222%" height="15" fill="rgb(218,138,4)" fg:x="1196474913" fg:w="197787964"/><text x="1.5941%" y="351.50"></text></g><g><title>_int_free_merge_chunk (50,893,813 samples, 0.06%)</title><rect x="1.5091%" y="325" width="0.0572%" height="15" fill="rgb(250,191,14)" fg:x="1343369064" fg:w="50893813"/><text x="1.7591%" y="335.50"></text></g><g><title>unlink_chunk.isra.0 (18,306,955 samples, 0.02%)</title><rect x="1.5457%" y="309" width="0.0206%" height="15" fill="rgb(239,60,40)" fg:x="1375955922" fg:w="18306955"/><text x="1.7957%" y="319.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow (17,880,808 samples, 0.02%)</title><rect x="2.4575%" y="325" width="0.0201%" height="15" fill="rgb(206,27,48)" fg:x="2187608839" fg:w="17880808"/><text x="2.7075%" y="335.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (195,539,227 samples, 0.22%)</title><rect x="2.2882%" y="341" width="0.2197%" height="15" fill="rgb(225,35,8)" fg:x="2036866289" fg:w="195539227"/><text x="2.5382%" y="351.50"></text></g><g><title>syscall (26,434,588 samples, 0.03%)</title><rect x="2.4781%" y="325" width="0.0297%" height="15" fill="rgb(250,213,24)" fg:x="2205970928" fg:w="26434588"/><text x="2.7281%" y="335.50"></text></g><g><title>[unknown] (26,425,879 samples, 0.03%)</title><rect x="2.4781%" y="309" width="0.0297%" height="15" fill="rgb(247,123,22)" fg:x="2205979637" fg:w="26425879"/><text x="2.7281%" y="319.50"></text></g><g><title>[unknown] (21,467,198 samples, 0.02%)</title><rect x="2.4837%" y="293" width="0.0241%" height="15" fill="rgb(231,138,38)" fg:x="2210938318" fg:w="21467198"/><text x="2.7337%" y="303.50"></text></g><g><title>[unknown] (21,109,256 samples, 0.02%)</title><rect x="2.4841%" y="277" width="0.0237%" height="15" fill="rgb(231,145,46)" fg:x="2211296260" fg:w="21109256"/><text x="2.7341%" y="287.50"></text></g><g><title>[unknown] (16,869,537 samples, 0.02%)</title><rect x="2.4889%" y="261" width="0.0190%" height="15" fill="rgb(251,118,11)" fg:x="2215535979" fg:w="16869537"/><text x="2.7389%" y="271.50"></text></g><g><title>[unknown] (16,703,524 samples, 0.02%)</title><rect x="2.4891%" y="245" width="0.0188%" height="15" fill="rgb(217,147,25)" fg:x="2215701992" fg:w="16703524"/><text x="2.7391%" y="255.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (121,803,724 samples, 0.14%)</title><rect x="2.5169%" y="341" width="0.1368%" height="15" fill="rgb(247,81,37)" fg:x="2240468497" fg:w="121803724"/><text x="2.7669%" y="351.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (121,793,285 samples, 0.14%)</title><rect x="2.5169%" y="325" width="0.1368%" height="15" fill="rgb(209,12,38)" fg:x="2240478936" fg:w="121793285"/><text x="2.7669%" y="335.50"></text></g><g><title>__vdso_clock_gettime (114,072,248 samples, 0.13%)</title><rect x="2.5256%" y="309" width="0.1281%" height="15" fill="rgb(227,1,9)" fg:x="2248199973" fg:w="114072248"/><text x="2.7756%" y="319.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (1,239,339,371 samples, 1.39%)</title><rect x="1.5663%" y="357" width="1.3922%" height="15" fill="rgb(248,47,43)" fg:x="1394262877" fg:w="1239339371"/><text x="1.8163%" y="367.50"></text></g><g><title>syscall (271,327,019 samples, 0.30%)</title><rect x="2.6537%" y="341" width="0.3048%" height="15" fill="rgb(221,10,30)" fg:x="2362275229" fg:w="271327019"/><text x="2.9037%" y="351.50"></text></g><g><title>[unknown] (270,957,112 samples, 0.30%)</title><rect x="2.6541%" y="325" width="0.3044%" height="15" fill="rgb(210,229,1)" fg:x="2362645136" fg:w="270957112"/><text x="2.9041%" y="335.50"></text></g><g><title>[unknown] (184,187,186 samples, 0.21%)</title><rect x="2.7516%" y="309" width="0.2069%" height="15" fill="rgb(222,148,37)" fg:x="2449415062" fg:w="184187186"/><text x="3.0016%" y="319.50"></text></g><g><title>[unknown] (182,341,037 samples, 0.20%)</title><rect x="2.7537%" y="293" width="0.2048%" height="15" fill="rgb(234,67,33)" fg:x="2451261211" fg:w="182341037"/><text x="3.0037%" y="303.50"></text></g><g><title>[unknown] (123,291,841 samples, 0.14%)</title><rect x="2.8200%" y="277" width="0.1385%" height="15" fill="rgb(247,98,35)" fg:x="2510310407" fg:w="123291841"/><text x="3.0700%" y="287.50"></text></g><g><title>[unknown] (95,497,970 samples, 0.11%)</title><rect x="2.8512%" y="261" width="0.1073%" height="15" fill="rgb(247,138,52)" fg:x="2538104278" fg:w="95497970"/><text x="3.1012%" y="271.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow (22,694,909 samples, 0.03%)</title><rect x="3.1581%" y="341" width="0.0255%" height="15" fill="rgb(213,79,30)" fg:x="2811311993" fg:w="22694909"/><text x="3.4081%" y="351.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (215,717,021 samples, 0.24%)</title><rect x="2.9585%" y="357" width="0.2423%" height="15" fill="rgb(246,177,23)" fg:x="2633602248" fg:w="215717021"/><text x="3.2085%" y="367.50"></text></g><g><title>syscall (12,473,448 samples, 0.01%)</title><rect x="3.1868%" y="341" width="0.0140%" height="15" fill="rgb(230,62,27)" fg:x="2836845821" fg:w="12473448"/><text x="3.4368%" y="351.50"></text></g><g><title>[unknown] (12,473,403 samples, 0.01%)</title><rect x="3.1868%" y="325" width="0.0140%" height="15" fill="rgb(216,154,8)" fg:x="2836845866" fg:w="12473403"/><text x="3.4368%" y="335.50"></text></g><g><title>[unknown] (11,409,623 samples, 0.01%)</title><rect x="3.1880%" y="309" width="0.0128%" height="15" fill="rgb(244,35,45)" fg:x="2837909646" fg:w="11409623"/><text x="3.4380%" y="319.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow (10,287,189 samples, 0.01%)</title><rect x="3.2271%" y="341" width="0.0116%" height="15" fill="rgb(251,115,12)" fg:x="2872657161" fg:w="10287189"/><text x="3.4771%" y="351.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (15,480,667 samples, 0.02%)</title><rect x="3.2386%" y="341" width="0.0174%" height="15" fill="rgb(240,54,50)" fg:x="2882954513" fg:w="15480667"/><text x="3.4886%" y="351.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (15,480,667 samples, 0.02%)</title><rect x="3.2386%" y="325" width="0.0174%" height="15" fill="rgb(233,84,52)" fg:x="2882954513" fg:w="15480667"/><text x="3.4886%" y="335.50"></text></g><g><title>__vdso_clock_gettime (13,393,822 samples, 0.02%)</title><rect x="3.2410%" y="309" width="0.0150%" height="15" fill="rgb(207,117,47)" fg:x="2885041358" fg:w="13393822"/><text x="3.4910%" y="319.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (50,120,295 samples, 0.06%)</title><rect x="3.2008%" y="357" width="0.0563%" height="15" fill="rgb(249,43,39)" fg:x="2849319269" fg:w="50120295"/><text x="3.4508%" y="367.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (95,056,033 samples, 0.11%)</title><rect x="3.2571%" y="357" width="0.1068%" height="15" fill="rgb(209,38,44)" fg:x="2899439564" fg:w="95056033"/><text x="3.5071%" y="367.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (95,055,811 samples, 0.11%)</title><rect x="3.2571%" y="341" width="0.1068%" height="15" fill="rgb(236,212,23)" fg:x="2899439786" fg:w="95055811"/><text x="3.5071%" y="351.50"></text></g><g><title>__vdso_clock_gettime (88,285,832 samples, 0.10%)</title><rect x="3.2648%" y="325" width="0.0992%" height="15" fill="rgb(242,79,21)" fg:x="2906209765" fg:w="88285832"/><text x="3.5148%" y="335.50"></text></g><g><title>syscall (34,624,870 samples, 0.04%)</title><rect x="3.3720%" y="357" width="0.0389%" height="15" fill="rgb(211,96,35)" fg:x="3001665532" fg:w="34624870"/><text x="3.6220%" y="367.50"></text></g><g><title>[unknown] (34,624,870 samples, 0.04%)</title><rect x="3.3720%" y="341" width="0.0389%" height="15" fill="rgb(253,215,40)" fg:x="3001665532" fg:w="34624870"/><text x="3.6220%" y="351.50"></text></g><g><title>_ZN5tokio7runtime4task7harness20Harness$LT$T$C$S$GT$8complete17haa47575028a782ccE.llvm.5028265998975039680 (138,142,361 samples, 0.16%)</title><rect x="3.4747%" y="341" width="0.1552%" height="15" fill="rgb(211,81,21)" fg:x="3093061946" fg:w="138142361"/><text x="3.7247%" y="351.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (130,923,826 samples, 0.15%)</title><rect x="3.4828%" y="325" width="0.1471%" height="15" fill="rgb(208,190,38)" fg:x="3100280481" fg:w="130923826"/><text x="3.7328%" y="335.50"></text></g><g><title>cfree@GLIBC_2.2.5 (17,400,183 samples, 0.02%)</title><rect x="3.6103%" y="309" width="0.0195%" height="15" fill="rgb(235,213,38)" fg:x="3213804124" fg:w="17400183"/><text x="3.8603%" y="319.50"></text></g><g><title>_int_free (13,587,217 samples, 0.02%)</title><rect x="3.6146%" y="293" width="0.0153%" height="15" fill="rgb(237,122,38)" fg:x="3217617090" fg:w="13587217"/><text x="3.8646%" y="303.50"></text></g><g><title>_ZN5tokio7runtime9scheduler12multi_thread6worker73_$LT$impl$u20$tokio..runtime..scheduler..multi_thread..handle..Handle$GT$16push_remote_task17h876995ad3021b1ceE.llvm.7890778762390715423 (208,417,290 samples, 0.23%)</title><rect x="3.7986%" y="309" width="0.2341%" height="15" fill="rgb(244,218,35)" fg:x="3381439281" fg:w="208417290"/><text x="4.0486%" y="319.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (13,206,843 samples, 0.01%)</title><rect x="4.0179%" y="293" width="0.0148%" height="15" fill="rgb(240,68,47)" fg:x="3576649728" fg:w="13206843"/><text x="4.2679%" y="303.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (28,807,348 samples, 0.03%)</title><rect x="4.0622%" y="293" width="0.0324%" height="15" fill="rgb(210,16,53)" fg:x="3616069957" fg:w="28807348"/><text x="4.3122%" y="303.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (28,807,348 samples, 0.03%)</title><rect x="4.0622%" y="277" width="0.0324%" height="15" fill="rgb(235,124,12)" fg:x="3616069957" fg:w="28807348"/><text x="4.3122%" y="287.50"></text></g><g><title>__vdso_clock_gettime (23,985,895 samples, 0.03%)</title><rect x="4.0676%" y="261" width="0.0269%" height="15" fill="rgb(224,169,11)" fg:x="3620891410" fg:w="23985895"/><text x="4.3176%" y="271.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (74,752,992 samples, 0.08%)</title><rect x="4.0327%" y="309" width="0.0840%" height="15" fill="rgb(250,166,2)" fg:x="3589856571" fg:w="74752992"/><text x="4.2827%" y="319.50"></text></g><g><title>syscall (19,732,258 samples, 0.02%)</title><rect x="4.0946%" y="293" width="0.0222%" height="15" fill="rgb(242,216,29)" fg:x="3644877305" fg:w="19732258"/><text x="4.3446%" y="303.50"></text></g><g><title>[unknown] (19,732,258 samples, 0.02%)</title><rect x="4.0946%" y="277" width="0.0222%" height="15" fill="rgb(230,116,27)" fg:x="3644877305" fg:w="19732258"/><text x="4.3446%" y="287.50"></text></g><g><title>[unknown] (19,732,258 samples, 0.02%)</title><rect x="4.0946%" y="261" width="0.0222%" height="15" fill="rgb(228,99,48)" fg:x="3644877305" fg:w="19732258"/><text x="4.3446%" y="271.50"></text></g><g><title>[unknown] (19,732,258 samples, 0.02%)</title><rect x="4.0946%" y="245" width="0.0222%" height="15" fill="rgb(253,11,6)" fg:x="3644877305" fg:w="19732258"/><text x="4.3446%" y="255.50"></text></g><g><title>[unknown] (13,809,255 samples, 0.02%)</title><rect x="4.1012%" y="229" width="0.0155%" height="15" fill="rgb(247,143,39)" fg:x="3650800308" fg:w="13809255"/><text x="4.3512%" y="239.50"></text></g><g><title>[unknown] (13,809,255 samples, 0.02%)</title><rect x="4.1012%" y="213" width="0.0155%" height="15" fill="rgb(236,97,10)" fg:x="3650800308" fg:w="13809255"/><text x="4.3512%" y="223.50"></text></g><g><title>[unknown] (13,809,255 samples, 0.02%)</title><rect x="4.1012%" y="197" width="0.0155%" height="15" fill="rgb(233,208,19)" fg:x="3650800308" fg:w="13809255"/><text x="4.3512%" y="207.50"></text></g><g><title>std::fs::OpenOptions::_open (16,810,176 samples, 0.02%)</title><rect x="4.1213%" y="309" width="0.0189%" height="15" fill="rgb(216,164,2)" fg:x="3668728347" fg:w="16810176"/><text x="4.3713%" y="319.50"></text></g><g><title>_ZN3std3sys3pal4unix2fs4File4open28_$u7b$$u7b$closure$u7d$$u7d$17h7ad264f52e504b10E.llvm.12208559908432827118 (16,810,176 samples, 0.02%)</title><rect x="4.1213%" y="293" width="0.0189%" height="15" fill="rgb(220,129,5)" fg:x="3668728347" fg:w="16810176"/><text x="4.3713%" y="303.50"></text></g><g><title>std::sys::pal::unix::fs::File::open_c (16,810,176 samples, 0.02%)</title><rect x="4.1213%" y="277" width="0.0189%" height="15" fill="rgb(242,17,10)" fg:x="3668728347" fg:w="16810176"/><text x="4.3713%" y="287.50"></text></g><g><title>__GI___libc_open (16,810,176 samples, 0.02%)</title><rect x="4.1213%" y="261" width="0.0189%" height="15" fill="rgb(242,107,0)" fg:x="3668728347" fg:w="16810176"/><text x="4.3713%" y="271.50"></text></g><g><title>[unknown] (16,810,176 samples, 0.02%)</title><rect x="4.1213%" y="245" width="0.0189%" height="15" fill="rgb(251,28,31)" fg:x="3668728347" fg:w="16810176"/><text x="4.3713%" y="255.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (514,502,711 samples, 0.58%)</title><rect x="3.6306%" y="325" width="0.5780%" height="15" fill="rgb(233,223,10)" fg:x="3231871501" fg:w="514502711"/><text x="3.8806%" y="335.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (58,122,957 samples, 0.07%)</title><rect x="4.1433%" y="309" width="0.0653%" height="15" fill="rgb(215,21,27)" fg:x="3688251255" fg:w="58122957"/><text x="4.3933%" y="319.50"></text></g><g><title>tokio::runtime::task::core::Trailer::set_waker (10,585,155 samples, 0.01%)</title><rect x="4.2087%" y="325" width="0.0119%" height="15" fill="rgb(232,23,21)" fg:x="3746459781" fg:w="10585155"/><text x="4.4587%" y="335.50"></text></g><g><title>tokio::runtime::task::waker::drop_waker (8,986,401 samples, 0.01%)</title><rect x="4.2105%" y="309" width="0.0101%" height="15" fill="rgb(244,5,23)" fg:x="3748058535" fg:w="8986401"/><text x="4.4605%" y="319.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_terminal (66,830,438 samples, 0.08%)</title><rect x="4.2292%" y="325" width="0.0751%" height="15" fill="rgb(226,81,46)" fg:x="3764706359" fg:w="66830438"/><text x="4.4792%" y="335.50"></text></g><g><title>_ZN5tokio7runtime4task7harness20Harness$LT$T$C$S$GT$8complete17hed70054b26fe6bdcE.llvm.10062069520299189432 (660,078,999 samples, 0.74%)</title><rect x="3.6298%" y="341" width="0.7415%" height="15" fill="rgb(247,70,30)" fg:x="3231204307" fg:w="660078999"/><text x="3.8798%" y="351.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_ref (53,121,441 samples, 0.06%)</title><rect x="4.3117%" y="325" width="0.0597%" height="15" fill="rgb(212,68,19)" fg:x="3838161865" fg:w="53121441"/><text x="4.5617%" y="335.50"></text></g><g><title>[unknown] (23,616,362 samples, 0.03%)</title><rect x="4.7910%" y="277" width="0.0265%" height="15" fill="rgb(240,187,13)" fg:x="4264824868" fg:w="23616362"/><text x="5.0410%" y="287.50"></text></g><g><title>[unknown] (23,616,362 samples, 0.03%)</title><rect x="4.7910%" y="261" width="0.0265%" height="15" fill="rgb(223,113,26)" fg:x="4264824868" fg:w="23616362"/><text x="5.0410%" y="271.50"></text></g><g><title>[unknown] (23,616,362 samples, 0.03%)</title><rect x="4.7910%" y="245" width="0.0265%" height="15" fill="rgb(206,192,2)" fg:x="4264824868" fg:w="23616362"/><text x="5.0410%" y="255.50"></text></g><g><title>[unknown] (23,441,854 samples, 0.03%)</title><rect x="4.7912%" y="229" width="0.0263%" height="15" fill="rgb(241,108,4)" fg:x="4264999376" fg:w="23441854"/><text x="5.0412%" y="239.50"></text></g><g><title>[unknown] (21,877,783 samples, 0.02%)</title><rect x="4.7929%" y="213" width="0.0246%" height="15" fill="rgb(247,173,49)" fg:x="4266563447" fg:w="21877783"/><text x="5.0429%" y="223.50"></text></g><g><title>alloc::sync::Arc&lt;T,A&gt;::drop_slow (65,977,597 samples, 0.07%)</title><rect x="4.7697%" y="309" width="0.0741%" height="15" fill="rgb(224,114,35)" fg:x="4245889191" fg:w="65977597"/><text x="5.0197%" y="319.50"></text></g><g><title>__close (47,041,963 samples, 0.05%)</title><rect x="4.7910%" y="293" width="0.0528%" height="15" fill="rgb(245,159,27)" fg:x="4264824825" fg:w="47041963"/><text x="5.0410%" y="303.50"></text></g><g><title>__GI___pthread_enable_asynccancel (23,425,558 samples, 0.03%)</title><rect x="4.8175%" y="277" width="0.0263%" height="15" fill="rgb(245,172,44)" fg:x="4288441230" fg:w="23425558"/><text x="5.0675%" y="287.50"></text></g><g><title>cfree@GLIBC_2.2.5 (151,741,008 samples, 0.17%)</title><rect x="4.8438%" y="309" width="0.1705%" height="15" fill="rgb(236,23,11)" fg:x="4311866788" fg:w="151741008"/><text x="5.0938%" y="319.50"></text></g><g><title>_int_free (51,301,845 samples, 0.06%)</title><rect x="4.9567%" y="293" width="0.0576%" height="15" fill="rgb(205,117,38)" fg:x="4412305951" fg:w="51301845"/><text x="5.2067%" y="303.50"></text></g><g><title>[unknown] (40,487,609 samples, 0.05%)</title><rect x="5.0724%" y="245" width="0.0455%" height="15" fill="rgb(237,72,25)" fg:x="4515373489" fg:w="40487609"/><text x="5.3224%" y="255.50"></text></g><g><title>[unknown] (22,247,524 samples, 0.02%)</title><rect x="5.0929%" y="229" width="0.0250%" height="15" fill="rgb(244,70,9)" fg:x="4533613574" fg:w="22247524"/><text x="5.3429%" y="239.50"></text></g><g><title>[unknown] (22,247,524 samples, 0.02%)</title><rect x="5.0929%" y="213" width="0.0250%" height="15" fill="rgb(217,125,39)" fg:x="4533613574" fg:w="22247524"/><text x="5.3429%" y="223.50"></text></g><g><title>[unknown] (22,244,160 samples, 0.02%)</title><rect x="5.0929%" y="197" width="0.0250%" height="15" fill="rgb(235,36,10)" fg:x="4533616938" fg:w="22244160"/><text x="5.3429%" y="207.50"></text></g><g><title>[unknown] (22,244,160 samples, 0.02%)</title><rect x="5.0929%" y="181" width="0.0250%" height="15" fill="rgb(251,123,47)" fg:x="4533616938" fg:w="22244160"/><text x="5.3429%" y="191.50"></text></g><g><title>[unknown] (14,306,989 samples, 0.02%)</title><rect x="5.1019%" y="165" width="0.0161%" height="15" fill="rgb(221,13,13)" fg:x="4541554109" fg:w="14306989"/><text x="5.3519%" y="175.50"></text></g><g><title>_ZN3std3sys3pal4unix2fs4File4open28_$u7b$$u7b$closure$u7d$$u7d$17h7ad264f52e504b10E.llvm.12208559908432827118 (80,117,349 samples, 0.09%)</title><rect x="5.0325%" y="293" width="0.0900%" height="15" fill="rgb(238,131,9)" fg:x="4479779349" fg:w="80117349"/><text x="5.2825%" y="303.50"></text></g><g><title>std::sys::pal::unix::fs::File::open_c (64,487,904 samples, 0.07%)</title><rect x="5.0500%" y="277" width="0.0724%" height="15" fill="rgb(211,50,8)" fg:x="4495408794" fg:w="64487904"/><text x="5.3000%" y="287.50"></text></g><g><title>__GI___libc_open (49,441,882 samples, 0.06%)</title><rect x="5.0669%" y="261" width="0.0555%" height="15" fill="rgb(245,182,24)" fg:x="4510454816" fg:w="49441882"/><text x="5.3169%" y="271.50"></text></g><g><title>std::fs::OpenOptions::_open (121,046,444 samples, 0.14%)</title><rect x="5.0143%" y="309" width="0.1360%" height="15" fill="rgb(242,14,37)" fg:x="4463607796" fg:w="121046444"/><text x="5.2643%" y="319.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (21,394,807 samples, 0.02%)</title><rect x="5.1262%" y="293" width="0.0240%" height="15" fill="rgb(246,228,12)" fg:x="4563259433" fg:w="21394807"/><text x="5.3762%" y="303.50"></text></g><g><title>[unknown] (60,136,685 samples, 0.07%)</title><rect x="5.1777%" y="261" width="0.0676%" height="15" fill="rgb(213,55,15)" fg:x="4609082460" fg:w="60136685"/><text x="5.4277%" y="271.50"></text></g><g><title>[unknown] (12,371,880 samples, 0.01%)</title><rect x="5.2314%" y="245" width="0.0139%" height="15" fill="rgb(209,9,3)" fg:x="4656847265" fg:w="12371880"/><text x="5.4814%" y="255.50"></text></g><g><title>[unknown] (11,291,177 samples, 0.01%)</title><rect x="5.2326%" y="229" width="0.0127%" height="15" fill="rgb(230,59,30)" fg:x="4657927968" fg:w="11291177"/><text x="5.4826%" y="239.50"></text></g><g><title>[unknown] (11,291,177 samples, 0.01%)</title><rect x="5.2326%" y="213" width="0.0127%" height="15" fill="rgb(209,121,21)" fg:x="4657927968" fg:w="11291177"/><text x="5.4826%" y="223.50"></text></g><g><title>[unknown] (11,291,177 samples, 0.01%)</title><rect x="5.2326%" y="197" width="0.0127%" height="15" fill="rgb(220,109,13)" fg:x="4657927968" fg:w="11291177"/><text x="5.4826%" y="207.50"></text></g><g><title>std::io::Write::write_all (84,575,683 samples, 0.10%)</title><rect x="5.1503%" y="309" width="0.0950%" height="15" fill="rgb(232,18,1)" fg:x="4584654240" fg:w="84575683"/><text x="5.4003%" y="319.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (84,572,293 samples, 0.10%)</title><rect x="5.1503%" y="293" width="0.0950%" height="15" fill="rgb(215,41,42)" fg:x="4584657630" fg:w="84572293"/><text x="5.4003%" y="303.50"></text></g><g><title>__GI___libc_write (62,199,591 samples, 0.07%)</title><rect x="5.1754%" y="277" width="0.0699%" height="15" fill="rgb(224,123,36)" fg:x="4607030332" fg:w="62199591"/><text x="5.4254%" y="287.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (37,731,942 samples, 0.04%)</title><rect x="6.3587%" y="261" width="0.0424%" height="15" fill="rgb(240,125,3)" fg:x="5660335523" fg:w="37731942"/><text x="6.6087%" y="271.50"></text></g><g><title>pow@@GLIBC_2.29 (152,398,180 samples, 0.17%)</title><rect x="6.4024%" y="261" width="0.1712%" height="15" fill="rgb(205,98,50)" fg:x="5699232843" fg:w="152398180"/><text x="6.6524%" y="271.50"></text></g><g><title>__ieee754_pow_fma (125,696,902 samples, 0.14%)</title><rect x="6.4324%" y="245" width="0.1412%" height="15" fill="rgb(205,185,37)" fg:x="5725934121" fg:w="125696902"/><text x="6.6824%" y="255.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (245,170,843 samples, 0.28%)</title><rect x="6.5736%" y="261" width="0.2754%" height="15" fill="rgb(238,207,15)" fg:x="5851631023" fg:w="245170843"/><text x="6.8236%" y="271.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (235,214,903 samples, 0.26%)</title><rect x="6.5847%" y="245" width="0.2642%" height="15" fill="rgb(213,199,42)" fg:x="5861586963" fg:w="235214903"/><text x="6.8347%" y="255.50"></text></g><g><title>__vdso_clock_gettime (193,453,529 samples, 0.22%)</title><rect x="6.6317%" y="229" width="0.2173%" height="15" fill="rgb(235,201,11)" fg:x="5903348337" fg:w="193453529"/><text x="6.8817%" y="239.50"></text></g><g><title>std::time::Instant::now (18,673,079 samples, 0.02%)</title><rect x="6.8490%" y="261" width="0.0210%" height="15" fill="rgb(207,46,11)" fg:x="6096801866" fg:w="18673079"/><text x="7.0990%" y="271.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::idle::Idle::transition_worker_to_parked (254,269,947 samples, 0.29%)</title><rect x="6.8699%" y="261" width="0.2856%" height="15" fill="rgb(241,35,35)" fg:x="6115474945" fg:w="254269947"/><text x="7.1199%" y="271.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (15,969,721 samples, 0.02%)</title><rect x="7.1376%" y="245" width="0.0179%" height="15" fill="rgb(243,32,47)" fg:x="6353775171" fg:w="15969721"/><text x="7.3876%" y="255.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::queue::Steal&lt;T&gt;::steal_into (458,297,325 samples, 0.51%)</title><rect x="7.1582%" y="261" width="0.5148%" height="15" fill="rgb(247,202,23)" fg:x="6372066810" fg:w="458297325"/><text x="7.4082%" y="271.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_if_work_pending (11,723,477 samples, 0.01%)</title><rect x="7.6730%" y="261" width="0.0132%" height="15" fill="rgb(219,102,11)" fg:x="6830364135" fg:w="11723477"/><text x="7.9230%" y="271.50"></text></g><g><title>_ZN5tokio7runtime4time5wheel5Wheel15next_expiration17h06cb420ada50ef8eE.llvm.3438195294553739473 (16,853,787 samples, 0.02%)</title><rect x="7.7321%" y="229" width="0.0189%" height="15" fill="rgb(243,110,44)" fg:x="6882904601" fg:w="16853787"/><text x="7.9821%" y="239.50"></text></g><g><title>_ZN5tokio7runtime4time6Driver13park_internal17h07d7677d94913ea1E.llvm.15610051396830749606 (117,790,339 samples, 0.13%)</title><rect x="7.7162%" y="245" width="0.1323%" height="15" fill="rgb(222,74,54)" fg:x="6868760247" fg:w="117790339"/><text x="7.9662%" y="255.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (79,288,817 samples, 0.09%)</title><rect x="7.7594%" y="229" width="0.0891%" height="15" fill="rgb(216,99,12)" fg:x="6907261769" fg:w="79288817"/><text x="8.0094%" y="239.50"></text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (74,956,156 samples, 0.08%)</title><rect x="7.7643%" y="213" width="0.0842%" height="15" fill="rgb(226,22,26)" fg:x="6911594430" fg:w="74956156"/><text x="8.0143%" y="223.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (25,563,830 samples, 0.03%)</title><rect x="7.8485%" y="245" width="0.0287%" height="15" fill="rgb(217,163,10)" fg:x="6986550586" fg:w="25563830"/><text x="8.0985%" y="255.50"></text></g><g><title>&lt;mio::event::events::Iter as core::iter::traits::iterator::Iterator&gt;::next (10,379,077 samples, 0.01%)</title><rect x="8.7162%" y="197" width="0.0117%" height="15" fill="rgb(213,25,53)" fg:x="7758986957" fg:w="10379077"/><text x="8.9662%" y="207.50"></text></g><g><title>[unknown] (31,733,869 samples, 0.04%)</title><rect x="8.7469%" y="165" width="0.0356%" height="15" fill="rgb(252,105,26)" fg:x="7786250252" fg:w="31733869"/><text x="8.9969%" y="175.50"></text></g><g><title>[unknown] (31,733,869 samples, 0.04%)</title><rect x="8.7469%" y="149" width="0.0356%" height="15" fill="rgb(220,39,43)" fg:x="7786250252" fg:w="31733869"/><text x="8.9969%" y="159.50"></text></g><g><title>[unknown] (31,733,869 samples, 0.04%)</title><rect x="8.7469%" y="133" width="0.0356%" height="15" fill="rgb(229,68,48)" fg:x="7786250252" fg:w="31733869"/><text x="8.9969%" y="143.50"></text></g><g><title>[unknown] (30,169,621 samples, 0.03%)</title><rect x="8.7486%" y="117" width="0.0339%" height="15" fill="rgb(252,8,32)" fg:x="7787814500" fg:w="30169621"/><text x="8.9986%" y="127.50"></text></g><g><title>[unknown] (22,550,237 samples, 0.03%)</title><rect x="8.7572%" y="101" width="0.0253%" height="15" fill="rgb(223,20,43)" fg:x="7795433884" fg:w="22550237"/><text x="9.0072%" y="111.50"></text></g><g><title>mio::sys::unix::selector::Selector::select (55,339,387 samples, 0.06%)</title><rect x="8.7297%" y="197" width="0.0622%" height="15" fill="rgb(229,81,49)" fg:x="7770982614" fg:w="55339387"/><text x="8.9797%" y="207.50"></text></g><g><title>epoll_wait (50,472,244 samples, 0.06%)</title><rect x="8.7352%" y="181" width="0.0567%" height="15" fill="rgb(236,28,36)" fg:x="7775849757" fg:w="50472244"/><text x="8.9852%" y="191.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (20,211,771 samples, 0.02%)</title><rect x="8.9846%" y="165" width="0.0227%" height="15" fill="rgb(249,185,26)" fg:x="7997868093" fg:w="20211771"/><text x="9.2346%" y="175.50"></text></g><g><title>_ZN5tokio7runtime2io6driver6Driver4turn17h8675aa24e133238cE.llvm.4663335772621512570 (377,239,068 samples, 0.42%)</title><rect x="8.6386%" y="213" width="0.4238%" height="15" fill="rgb(249,174,33)" fg:x="7689859872" fg:w="377239068"/><text x="8.8886%" y="223.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::wake (240,776,939 samples, 0.27%)</title><rect x="8.7919%" y="197" width="0.2705%" height="15" fill="rgb(233,201,37)" fg:x="7826322001" fg:w="240776939"/><text x="9.0419%" y="207.50"></text></g><g><title>tokio::runtime::task::waker::wake_by_val (138,994,480 samples, 0.16%)</title><rect x="8.9062%" y="181" width="0.1561%" height="15" fill="rgb(221,78,26)" fg:x="7928104460" fg:w="138994480"/><text x="9.1562%" y="191.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_notified_by_val (45,085,845 samples, 0.05%)</title><rect x="9.0117%" y="165" width="0.0506%" height="15" fill="rgb(250,127,30)" fg:x="8022013095" fg:w="45085845"/><text x="9.2617%" y="175.50"></text></g><g><title>_ZN5tokio7runtime4time5wheel5Wheel15next_expiration17h06cb420ada50ef8eE.llvm.3438195294553739473 (381,255,083 samples, 0.43%)</title><rect x="9.0623%" y="213" width="0.4283%" height="15" fill="rgb(230,49,44)" fg:x="8067098940" fg:w="381255083"/><text x="9.3123%" y="223.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (92,497,006 samples, 0.10%)</title><rect x="9.4959%" y="213" width="0.1039%" height="15" fill="rgb(229,67,23)" fg:x="8453012236" fg:w="92497006"/><text x="9.7459%" y="223.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (92,497,006 samples, 0.10%)</title><rect x="9.4959%" y="197" width="0.1039%" height="15" fill="rgb(249,83,47)" fg:x="8453012236" fg:w="92497006"/><text x="9.7459%" y="207.50"></text></g><g><title>__vdso_clock_gettime (90,715,888 samples, 0.10%)</title><rect x="9.4979%" y="181" width="0.1019%" height="15" fill="rgb(215,43,3)" fg:x="8454793354" fg:w="90715888"/><text x="9.7479%" y="191.50"></text></g><g><title>tokio::process::imp::orphan::OrphanQueueImpl&lt;T&gt;::reap_orphans (142,105,719 samples, 0.16%)</title><rect x="9.6018%" y="213" width="0.1596%" height="15" fill="rgb(238,154,13)" fg:x="8547306442" fg:w="142105719"/><text x="9.8518%" y="223.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (29,153,332 samples, 0.03%)</title><rect x="9.7735%" y="197" width="0.0328%" height="15" fill="rgb(219,56,2)" fg:x="8700154763" fg:w="29153332"/><text x="10.0235%" y="207.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (29,153,332 samples, 0.03%)</title><rect x="9.7735%" y="181" width="0.0328%" height="15" fill="rgb(233,0,4)" fg:x="8700154763" fg:w="29153332"/><text x="10.0235%" y="191.50"></text></g><g><title>__vdso_clock_gettime (16,986,049 samples, 0.02%)</title><rect x="9.7872%" y="165" width="0.0191%" height="15" fill="rgb(235,30,7)" fg:x="8712322046" fg:w="16986049"/><text x="10.0372%" y="175.50"></text></g><g><title>std::time::Instant::saturating_duration_since (14,742,341 samples, 0.02%)</title><rect x="9.8063%" y="197" width="0.0166%" height="15" fill="rgb(250,79,13)" fg:x="8729308095" fg:w="14742341"/><text x="10.0563%" y="207.50"></text></g><g><title>_ZN5tokio7runtime4time5wheel5Wheel15next_expiration17h06cb420ada50ef8eE.llvm.3438195294553739473 (73,617,575 samples, 0.08%)</title><rect x="11.6889%" y="181" width="0.0827%" height="15" fill="rgb(211,146,34)" fg:x="10405217210" fg:w="73617575"/><text x="11.9389%" y="191.50"></text></g><g><title>_ZN5tokio7runtime4time6Driver13park_internal17h07d7677d94913ea1E.llvm.15610051396830749606 (2,910,159,674 samples, 3.27%)</title><rect x="8.5530%" y="229" width="3.2692%" height="15" fill="rgb(228,22,38)" fg:x="7613687381" fg:w="2910159674"/><text x="8.8030%" y="239.50">_ZN..</text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process (1,834,434,894 samples, 2.06%)</title><rect x="9.7614%" y="213" width="2.0608%" height="15" fill="rgb(235,168,5)" fg:x="8689412161" fg:w="1834434894"/><text x="10.0114%" y="223.50">t..</text></g><g><title>tokio::runtime::time::&lt;impl tokio::runtime::time::handle::Handle&gt;::process_at_sharded_time (1,779,796,619 samples, 2.00%)</title><rect x="9.8228%" y="197" width="1.9994%" height="15" fill="rgb(221,155,16)" fg:x="8744050436" fg:w="1779796619"/><text x="10.0728%" y="207.50">t..</text></g><g><title>tokio::runtime::time::wheel::Wheel::poll (45,012,270 samples, 0.05%)</title><rect x="11.7716%" y="181" width="0.0506%" height="15" fill="rgb(215,215,53)" fg:x="10478834785" fg:w="45012270"/><text x="12.0216%" y="191.50"></text></g><g><title>_ZN5tokio7runtime4time5wheel5Wheel15next_expiration17h06cb420ada50ef8eE.llvm.3438195294553739473 (20,119,297 samples, 0.02%)</title><rect x="11.7996%" y="165" width="0.0226%" height="15" fill="rgb(223,4,10)" fg:x="10503727758" fg:w="20119297"/><text x="12.0496%" y="175.50"></text></g><g><title>parking_lot::condvar::Condvar::wait_until_internal (190,658,838 samples, 0.21%)</title><rect x="11.8222%" y="229" width="0.2142%" height="15" fill="rgb(234,103,6)" fg:x="10523847055" fg:w="190658838"/><text x="12.0722%" y="239.50"></text></g><g><title>syscall (41,687,082 samples, 0.05%)</title><rect x="11.9895%" y="213" width="0.0468%" height="15" fill="rgb(227,97,0)" fg:x="10672818811" fg:w="41687082"/><text x="12.2395%" y="223.50"></text></g><g><title>[unknown] (41,687,081 samples, 0.05%)</title><rect x="11.9895%" y="197" width="0.0468%" height="15" fill="rgb(234,150,53)" fg:x="10672818812" fg:w="41687081"/><text x="12.2395%" y="207.50"></text></g><g><title>[unknown] (29,931,256 samples, 0.03%)</title><rect x="12.0027%" y="181" width="0.0336%" height="15" fill="rgb(228,201,54)" fg:x="10684574637" fg:w="29931256"/><text x="12.2527%" y="191.50"></text></g><g><title>[unknown] (29,931,256 samples, 0.03%)</title><rect x="12.0027%" y="165" width="0.0336%" height="15" fill="rgb(222,22,37)" fg:x="10684574637" fg:w="29931256"/><text x="12.2527%" y="175.50"></text></g><g><title>[unknown] (27,507,466 samples, 0.03%)</title><rect x="12.0055%" y="149" width="0.0309%" height="15" fill="rgb(237,53,32)" fg:x="10686998427" fg:w="27507466"/><text x="12.2555%" y="159.50"></text></g><g><title>[unknown] (27,273,358 samples, 0.03%)</title><rect x="12.0057%" y="133" width="0.0306%" height="15" fill="rgb(233,25,53)" fg:x="10687232535" fg:w="27273358"/><text x="12.2557%" y="143.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Parker::park (3,707,276,622 samples, 4.16%)</title><rect x="7.8784%" y="245" width="4.1646%" height="15" fill="rgb(210,40,34)" fg:x="7013211859" fg:w="3707276622"/><text x="8.1284%" y="255.50">tokio..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::park_timeout (3,919,616,292 samples, 4.40%)</title><rect x="7.6862%" y="261" width="4.4032%" height="15" fill="rgb(241,220,44)" fg:x="6842087612" fg:w="3919616292"/><text x="7.9362%" y="271.50">tokio..</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::notify_parked_local (34,865,818 samples, 0.04%)</title><rect x="12.0502%" y="245" width="0.0392%" height="15" fill="rgb(235,28,35)" fg:x="10726838086" fg:w="34865818"/><text x="12.3002%" y="255.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (56,865,041 samples, 0.06%)</title><rect x="12.4308%" y="229" width="0.0639%" height="15" fill="rgb(210,56,17)" fg:x="11065616097" fg:w="56865041"/><text x="12.6808%" y="239.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (77,524,669 samples, 0.09%)</title><rect x="12.4947%" y="229" width="0.0871%" height="15" fill="rgb(224,130,29)" fg:x="11122481138" fg:w="77524669"/><text x="12.7447%" y="239.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (76,598,957 samples, 0.09%)</title><rect x="12.4957%" y="213" width="0.0860%" height="15" fill="rgb(235,212,8)" fg:x="11123406850" fg:w="76598957"/><text x="12.7457%" y="223.50"></text></g><g><title>__vdso_clock_gettime (75,497,498 samples, 0.08%)</title><rect x="12.4970%" y="197" width="0.0848%" height="15" fill="rgb(223,33,50)" fg:x="11124508309" fg:w="75497498"/><text x="12.7470%" y="207.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (274,307,140 samples, 0.31%)</title><rect x="12.3315%" y="245" width="0.3081%" height="15" fill="rgb(219,149,13)" fg:x="10977223561" fg:w="274307140"/><text x="12.5815%" y="255.50"></text></g><g><title>syscall (51,524,894 samples, 0.06%)</title><rect x="12.5818%" y="229" width="0.0579%" height="15" fill="rgb(250,156,29)" fg:x="11200005807" fg:w="51524894"/><text x="12.8318%" y="239.50"></text></g><g><title>[unknown] (51,524,894 samples, 0.06%)</title><rect x="12.5818%" y="213" width="0.0579%" height="15" fill="rgb(216,193,19)" fg:x="11200005807" fg:w="51524894"/><text x="12.8318%" y="223.50"></text></g><g><title>[unknown] (10,049,666 samples, 0.01%)</title><rect x="12.6284%" y="197" width="0.0113%" height="15" fill="rgb(216,135,14)" fg:x="11241481035" fg:w="10049666"/><text x="12.8784%" y="207.50"></text></g><g><title>[unknown] (10,049,666 samples, 0.01%)</title><rect x="12.6284%" y="181" width="0.0113%" height="15" fill="rgb(241,47,5)" fg:x="11241481035" fg:w="10049666"/><text x="12.8784%" y="191.50"></text></g><g><title>tokio::runtime::driver::IoHandle::unpark (15,342,496 samples, 0.02%)</title><rect x="12.6396%" y="245" width="0.0172%" height="15" fill="rgb(233,42,35)" fg:x="11251530701" fg:w="15342496"/><text x="12.8896%" y="255.50"></text></g><g><title>mio::sys::unix::waker::Waker::wake (15,338,936 samples, 0.02%)</title><rect x="12.6397%" y="229" width="0.0172%" height="15" fill="rgb(231,13,6)" fg:x="11251534261" fg:w="15338936"/><text x="12.8897%" y="239.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Write&gt;::write (14,221,335 samples, 0.02%)</title><rect x="12.6409%" y="213" width="0.0160%" height="15" fill="rgb(207,181,40)" fg:x="11252651862" fg:w="14221335"/><text x="12.8909%" y="223.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::park::Unparker::unpark (115,716,455 samples, 0.13%)</title><rect x="12.6569%" y="245" width="0.1300%" height="15" fill="rgb(254,173,49)" fg:x="11266873197" fg:w="115716455"/><text x="12.9069%" y="255.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::transition_worker_from_searching (237,021,817 samples, 0.27%)</title><rect x="12.7869%" y="245" width="0.2663%" height="15" fill="rgb(221,1,38)" fg:x="11382589652" fg:w="237021817"/><text x="13.0369%" y="255.50"></text></g><g><title>__memmove_avx512_unaligned_erms (4,065,113,492 samples, 4.57%)</title><rect x="14.1850%" y="181" width="4.5666%" height="15" fill="rgb(206,124,46)" fg:x="12627132391" fg:w="4065113492"/><text x="14.4350%" y="191.50">__mem..</text></g><g><title>__rdl_dealloc (85,991,068 samples, 0.10%)</title><rect x="18.7516%" y="181" width="0.0966%" height="15" fill="rgb(249,21,11)" fg:x="16692245883" fg:w="85991068"/><text x="19.0016%" y="191.50"></text></g><g><title>__rust_dealloc (46,343,665 samples, 0.05%)</title><rect x="18.8482%" y="181" width="0.0521%" height="15" fill="rgb(222,201,40)" fg:x="16778236951" fg:w="46343665"/><text x="19.0982%" y="191.50"></text></g><g><title>__rdl_alloc (64,681,253 samples, 0.07%)</title><rect x="20.6581%" y="165" width="0.0727%" height="15" fill="rgb(235,61,29)" fg:x="18389353663" fg:w="64681253"/><text x="20.9081%" y="175.50"></text></g><g><title>__rust_alloc (41,225,854 samples, 0.05%)</title><rect x="20.7307%" y="165" width="0.0463%" height="15" fill="rgb(219,207,3)" fg:x="18454034916" fg:w="41225854"/><text x="20.9807%" y="175.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (473,617,901 samples, 0.53%)</title><rect x="23.6994%" y="149" width="0.5320%" height="15" fill="rgb(222,56,46)" fg:x="21096712109" fg:w="473617901"/><text x="23.9494%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (5,667,214,241 samples, 6.37%)</title><rect x="24.2315%" y="149" width="6.3664%" height="15" fill="rgb(239,76,54)" fg:x="21570330010" fg:w="5667214241"/><text x="24.4815%" y="159.50">&lt;alloc::..</text></g><g><title>__memmove_avx512_unaligned_erms (2,361,273,662 samples, 2.65%)</title><rect x="27.9453%" y="133" width="2.6526%" height="15" fill="rgb(231,124,27)" fg:x="24876270589" fg:w="2361273662"/><text x="28.1953%" y="143.50">__..</text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (99,568,241 samples, 0.11%)</title><rect x="30.5979%" y="149" width="0.1119%" height="15" fill="rgb(249,195,6)" fg:x="27237544251" fg:w="99568241"/><text x="30.8479%" y="159.50"></text></g><g><title>core::fmt::Formatter::pad (421,850,761 samples, 0.47%)</title><rect x="30.7097%" y="149" width="0.4739%" height="15" fill="rgb(237,174,47)" fg:x="27337112492" fg:w="421850761"/><text x="30.9597%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (969,550,517 samples, 1.09%)</title><rect x="32.3023%" y="133" width="1.0892%" height="15" fill="rgb(206,201,31)" fg:x="28754745638" fg:w="969550517"/><text x="32.5523%" y="143.50"></text></g><g><title>__memmove_avx512_unaligned_erms (548,458,327 samples, 0.62%)</title><rect x="32.7753%" y="117" width="0.6161%" height="15" fill="rgb(231,57,52)" fg:x="29175837828" fg:w="548458327"/><text x="33.0253%" y="127.50"></text></g><g><title>core::fmt::write (13,606,166,310 samples, 15.28%)</title><rect x="20.7770%" y="165" width="15.2848%" height="15" fill="rgb(248,177,22)" fg:x="18495260770" fg:w="13606166310"/><text x="21.0270%" y="175.50">core::fmt::write</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for usize&gt;::fmt (4,342,463,827 samples, 4.88%)</title><rect x="31.1836%" y="149" width="4.8782%" height="15" fill="rgb(215,211,37)" fg:x="27758963253" fg:w="4342463827"/><text x="31.4336%" y="159.50">core::..</text></g><g><title>core::fmt::Formatter::pad_integral (2,377,130,925 samples, 2.67%)</title><rect x="33.3914%" y="133" width="2.6704%" height="15" fill="rgb(241,128,51)" fg:x="29724296155" fg:w="2377130925"/><text x="33.6414%" y="143.50">co..</text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (706,695,036 samples, 0.79%)</title><rect x="35.2679%" y="117" width="0.7939%" height="15" fill="rgb(227,165,31)" fg:x="31394732044" fg:w="706695036"/><text x="35.5179%" y="127.50"></text></g><g><title>alloc::fmt::format::format_inner (16,003,081,771 samples, 17.98%)</title><rect x="18.9003%" y="181" width="17.9774%" height="15" fill="rgb(228,167,24)" fg:x="16824580616" fg:w="16003081771"/><text x="19.1503%" y="191.50">alloc::fmt::format::format_i..</text></g><g><title>malloc (726,235,307 samples, 0.82%)</title><rect x="36.0618%" y="165" width="0.8158%" height="15" fill="rgb(228,143,12)" fg:x="32101427080" fg:w="726235307"/><text x="36.3118%" y="175.50"></text></g><g><title>__rdl_realloc (12,370,634 samples, 0.01%)</title><rect x="36.9403%" y="149" width="0.0139%" height="15" fill="rgb(249,149,8)" fg:x="32883399289" fg:w="12370634"/><text x="37.1903%" y="159.50"></text></g><g><title>__lll_lock_wake_private (11,305,804 samples, 0.01%)</title><rect x="37.3602%" y="133" width="0.0127%" height="15" fill="rgb(243,35,44)" fg:x="33257233261" fg:w="11305804"/><text x="37.6102%" y="143.50"></text></g><g><title>[unknown] (11,305,804 samples, 0.01%)</title><rect x="37.3602%" y="117" width="0.0127%" height="15" fill="rgb(246,89,9)" fg:x="33257233261" fg:w="11305804"/><text x="37.6102%" y="127.50"></text></g><g><title>[unknown] (11,305,804 samples, 0.01%)</title><rect x="37.3602%" y="101" width="0.0127%" height="15" fill="rgb(233,213,13)" fg:x="33257233261" fg:w="11305804"/><text x="37.6102%" y="111.50"></text></g><g><title>[unknown] (11,305,804 samples, 0.01%)</title><rect x="37.3602%" y="85" width="0.0127%" height="15" fill="rgb(233,141,41)" fg:x="33257233261" fg:w="11305804"/><text x="37.6102%" y="95.50"></text></g><g><title>[unknown] (11,305,804 samples, 0.01%)</title><rect x="37.3602%" y="69" width="0.0127%" height="15" fill="rgb(239,167,4)" fg:x="33257233261" fg:w="11305804"/><text x="37.6102%" y="79.50"></text></g><g><title>[unknown] (11,305,804 samples, 0.01%)</title><rect x="37.3602%" y="53" width="0.0127%" height="15" fill="rgb(209,217,16)" fg:x="33257233261" fg:w="11305804"/><text x="37.6102%" y="63.50"></text></g><g><title>__memmove_avx512_unaligned_erms (67,387,078 samples, 0.08%)</title><rect x="37.4650%" y="117" width="0.0757%" height="15" fill="rgb(219,88,35)" fg:x="33350525730" fg:w="67387078"/><text x="37.7150%" y="127.50"></text></g><g><title>_int_free (40,145,199 samples, 0.05%)</title><rect x="37.5407%" y="117" width="0.0451%" height="15" fill="rgb(220,193,23)" fg:x="33417912808" fg:w="40145199"/><text x="37.7907%" y="127.50"></text></g><g><title>_int_free_merge_chunk (28,220,178 samples, 0.03%)</title><rect x="37.5858%" y="117" width="0.0317%" height="15" fill="rgb(230,90,52)" fg:x="33458058007" fg:w="28220178"/><text x="37.8358%" y="127.50"></text></g><g><title>_int_free_create_chunk (10,535,270 samples, 0.01%)</title><rect x="37.6057%" y="101" width="0.0118%" height="15" fill="rgb(252,106,19)" fg:x="33475742915" fg:w="10535270"/><text x="37.8557%" y="111.50"></text></g><g><title>malloc_consolidate (1,344,431,496 samples, 1.51%)</title><rect x="38.9001%" y="101" width="1.5103%" height="15" fill="rgb(206,74,20)" fg:x="34627973057" fg:w="1344431496"/><text x="39.1501%" y="111.50"></text></g><g><title>unlink_chunk.isra.0 (134,588,484 samples, 0.15%)</title><rect x="40.2592%" y="85" width="0.1512%" height="15" fill="rgb(230,138,44)" fg:x="35837816069" fg:w="134588484"/><text x="40.5092%" y="95.50"></text></g><g><title>_int_malloc (2,495,396,234 samples, 2.80%)</title><rect x="37.6175%" y="117" width="2.8033%" height="15" fill="rgb(235,182,43)" fg:x="33486278185" fg:w="2495396234"/><text x="37.8675%" y="127.50">_i..</text></g><g><title>unlink_chunk.isra.0 (9,269,866 samples, 0.01%)</title><rect x="40.4104%" y="101" width="0.0104%" height="15" fill="rgb(242,16,51)" fg:x="35972404553" fg:w="9269866"/><text x="40.6604%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (3,191,765,137 samples, 3.59%)</title><rect x="36.8777%" y="181" width="3.5855%" height="15" fill="rgb(248,9,4)" fg:x="32827662387" fg:w="3191765137"/><text x="37.1277%" y="191.50">allo..</text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hb3f069b0a2c2259eE.llvm.12188277937332800301 (3,139,200,082 samples, 3.53%)</title><rect x="36.9367%" y="165" width="3.5265%" height="15" fill="rgb(210,31,22)" fg:x="32880227442" fg:w="3139200082"/><text x="37.1867%" y="175.50">_ZN..</text></g><g><title>realloc (3,115,326,212 samples, 3.50%)</title><rect x="36.9635%" y="149" width="3.4997%" height="15" fill="rgb(239,54,39)" fg:x="32904101312" fg:w="3115326212"/><text x="37.2135%" y="159.50">rea..</text></g><g><title>_int_realloc (2,750,888,459 samples, 3.09%)</title><rect x="37.3729%" y="133" width="3.0903%" height="15" fill="rgb(230,99,41)" fg:x="33268539065" fg:w="2750888459"/><text x="37.6229%" y="143.50">_in..</text></g><g><title>unlink_chunk.isra.0 (33,798,648 samples, 0.04%)</title><rect x="40.4252%" y="117" width="0.0380%" height="15" fill="rgb(253,106,12)" fg:x="35985628876" fg:w="33798648"/><text x="40.6752%" y="127.50"></text></g><g><title>cfree@GLIBC_2.2.5 (800,489,053 samples, 0.90%)</title><rect x="40.4632%" y="181" width="0.8992%" height="15" fill="rgb(213,46,41)" fg:x="36019427524" fg:w="800489053"/><text x="40.7132%" y="191.50"></text></g><g><title>_int_free (428,673,568 samples, 0.48%)</title><rect x="40.8809%" y="165" width="0.4816%" height="15" fill="rgb(215,133,35)" fg:x="36391243009" fg:w="428673568"/><text x="41.1309%" y="175.50"></text></g><g><title>_int_free_merge_chunk (37,951,268 samples, 0.04%)</title><rect x="41.3198%" y="149" width="0.0426%" height="15" fill="rgb(213,28,5)" fg:x="36781965309" fg:w="37951268"/><text x="41.5698%" y="159.50"></text></g><g><title>_int_free_create_chunk (37,951,268 samples, 0.04%)</title><rect x="41.3198%" y="133" width="0.0426%" height="15" fill="rgb(215,77,49)" fg:x="36781965309" fg:w="37951268"/><text x="41.5698%" y="143.50"></text></g><g><title>unlink_chunk.isra.0 (29,796,785 samples, 0.03%)</title><rect x="41.3290%" y="117" width="0.0335%" height="15" fill="rgb(248,100,22)" fg:x="36790119792" fg:w="29796785"/><text x="41.5790%" y="127.50"></text></g><g><title>__memmove_avx512_unaligned_erms (33,859,892 samples, 0.04%)</title><rect x="41.4529%" y="149" width="0.0380%" height="15" fill="rgb(208,67,9)" fg:x="36900475272" fg:w="33859892"/><text x="41.7029%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2,137,286,027 samples, 2.40%)</title><rect x="41.4039%" y="165" width="2.4010%" height="15" fill="rgb(219,133,21)" fg:x="36856838030" fg:w="2137286027"/><text x="41.6539%" y="175.50">&lt;a..</text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (2,059,788,893 samples, 2.31%)</title><rect x="41.4910%" y="149" width="2.3139%" height="15" fill="rgb(246,46,29)" fg:x="36934335164" fg:w="2059788893"/><text x="41.7410%" y="159.50">a..</text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h9f747ec6dd83247aE.llvm.9727513734214763839 (2,046,233,629 samples, 2.30%)</title><rect x="41.5062%" y="133" width="2.2987%" height="15" fill="rgb(246,185,52)" fg:x="36947890428" fg:w="2046233629"/><text x="41.7562%" y="143.50">_..</text></g><g><title>malloc (2,030,332,922 samples, 2.28%)</title><rect x="41.5241%" y="117" width="2.2808%" height="15" fill="rgb(252,136,11)" fg:x="36963791135" fg:w="2030332922"/><text x="41.7741%" y="127.50">m..</text></g><g><title>_int_malloc (1,977,879,692 samples, 2.22%)</title><rect x="41.5830%" y="101" width="2.2219%" height="15" fill="rgb(219,138,53)" fg:x="37016244365" fg:w="1977879692"/><text x="41.8330%" y="111.50">_..</text></g><g><title>malloc_consolidate (1,049,865,245 samples, 1.18%)</title><rect x="42.6255%" y="85" width="1.1794%" height="15" fill="rgb(211,51,23)" fg:x="37944258812" fg:w="1049865245"/><text x="42.8755%" y="95.50"></text></g><g><title>unlink_chunk.isra.0 (51,262,380 samples, 0.06%)</title><rect x="43.7473%" y="69" width="0.0576%" height="15" fill="rgb(247,221,28)" fg:x="38942861677" fg:w="51262380"/><text x="43.9973%" y="79.50"></text></g><g><title>core::fmt::Formatter::pad (11,821,276 samples, 0.01%)</title><rect x="43.8049%" y="165" width="0.0133%" height="15" fill="rgb(251,222,45)" fg:x="38994124057" fg:w="11821276"/><text x="44.0549%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (40,485,081 samples, 0.05%)</title><rect x="43.8252%" y="149" width="0.0455%" height="15" fill="rgb(217,162,53)" fg:x="39012245197" fg:w="40485081"/><text x="44.0752%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (25,291,816 samples, 0.03%)</title><rect x="43.8423%" y="133" width="0.0284%" height="15" fill="rgb(229,93,14)" fg:x="39027438462" fg:w="25291816"/><text x="44.0923%" y="143.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h9f747ec6dd83247aE.llvm.9727513734214763839 (16,253,131 samples, 0.02%)</title><rect x="43.8525%" y="117" width="0.0183%" height="15" fill="rgb(209,67,49)" fg:x="39036477147" fg:w="16253131"/><text x="44.1025%" y="127.50"></text></g><g><title>realloc (9,083,674 samples, 0.01%)</title><rect x="43.8605%" y="101" width="0.0102%" height="15" fill="rgb(213,87,29)" fg:x="39043646604" fg:w="9083674"/><text x="44.1105%" y="111.50"></text></g><g><title>&lt;zyst::response::ZystResponse as core::fmt::Display&gt;::fmt (27,132,158,511 samples, 30.48%)</title><rect x="13.3980%" y="197" width="30.4795%" height="15" fill="rgb(205,151,52)" fg:x="11926572019" fg:w="27132158511"/><text x="13.6480%" y="207.50">&lt;zyst::response::ZystResponse as core::fmt::Dis..</text></g><g><title>core::fmt::write (2,238,813,953 samples, 2.52%)</title><rect x="41.3624%" y="181" width="2.5150%" height="15" fill="rgb(253,215,39)" fg:x="36819916577" fg:w="2238813953"/><text x="41.6124%" y="191.50">co..</text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for isize&gt;::fmt (52,785,197 samples, 0.06%)</title><rect x="43.8182%" y="165" width="0.0593%" height="15" fill="rgb(221,220,41)" fg:x="39005945333" fg:w="52785197"/><text x="44.0682%" y="175.50"></text></g><g><title>__memmove_avx512_unaligned_erms (38,862,651 samples, 0.04%)</title><rect x="43.8844%" y="197" width="0.0437%" height="15" fill="rgb(218,133,21)" fg:x="39064934090" fg:w="38862651"/><text x="44.1344%" y="207.50"></text></g><g><title>__rdl_alloc (10,746,091 samples, 0.01%)</title><rect x="43.9281%" y="197" width="0.0121%" height="15" fill="rgb(221,193,43)" fg:x="39103796741" fg:w="10746091"/><text x="44.1781%" y="207.50"></text></g><g><title>alloc::string::String::from_utf8_lossy (91,859,510 samples, 0.10%)</title><rect x="43.9464%" y="197" width="0.1032%" height="15" fill="rgb(240,128,52)" fg:x="39120071126" fg:w="91859510"/><text x="44.1964%" y="207.50"></text></g><g><title>&lt;core::str::lossy::Utf8Chunks as core::iter::traits::iterator::Iterator&gt;::next (60,920,569 samples, 0.07%)</title><rect x="43.9811%" y="181" width="0.0684%" height="15" fill="rgb(253,114,12)" fg:x="39151010067" fg:w="60920569"/><text x="44.2311%" y="191.50"></text></g><g><title>_int_free_create_chunk (9,101,399 samples, 0.01%)</title><rect x="44.3843%" y="149" width="0.0102%" height="15" fill="rgb(215,223,47)" fg:x="39509933143" fg:w="9101399"/><text x="44.6343%" y="159.50"></text></g><g><title>unlink_chunk.isra.0 (9,101,399 samples, 0.01%)</title><rect x="44.3843%" y="133" width="0.0102%" height="15" fill="rgb(248,225,23)" fg:x="39509933143" fg:w="9101399"/><text x="44.6343%" y="143.50"></text></g><g><title>cfree@GLIBC_2.2.5 (312,631,609 samples, 0.35%)</title><rect x="44.0496%" y="197" width="0.3512%" height="15" fill="rgb(250,108,0)" fg:x="39211930636" fg:w="312631609"/><text x="44.2996%" y="207.50"></text></g><g><title>_int_free (174,837,772 samples, 0.20%)</title><rect x="44.2044%" y="181" width="0.1964%" height="15" fill="rgb(228,208,7)" fg:x="39349724473" fg:w="174837772"/><text x="44.4544%" y="191.50"></text></g><g><title>_int_free_merge_chunk (24,167,273 samples, 0.03%)</title><rect x="44.3736%" y="165" width="0.0271%" height="15" fill="rgb(244,45,10)" fg:x="39500394972" fg:w="24167273"/><text x="44.6236%" y="175.50"></text></g><g><title>__rdl_dealloc (78,174,756 samples, 0.09%)</title><rect x="44.4210%" y="181" width="0.0878%" height="15" fill="rgb(207,125,25)" fg:x="39542575891" fg:w="78174756"/><text x="44.6710%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;zyst::response::ZystResponse&gt; (5,099,405,047 samples, 5.73%)</title><rect x="44.4010%" y="197" width="5.7285%" height="15" fill="rgb(210,195,18)" fg:x="39524760584" fg:w="5099405047"/><text x="44.6510%" y="207.50">core::p..</text></g><g><title>cfree@GLIBC_2.2.5 (4,999,053,669 samples, 5.62%)</title><rect x="44.5137%" y="181" width="5.6158%" height="15" fill="rgb(249,80,12)" fg:x="39625111962" fg:w="4999053669"/><text x="44.7637%" y="191.50">cfree@G..</text></g><g><title>_int_free (4,821,592,317 samples, 5.42%)</title><rect x="44.7131%" y="165" width="5.4164%" height="15" fill="rgb(221,65,9)" fg:x="39802573314" fg:w="4821592317"/><text x="44.9631%" y="175.50">_int_fr..</text></g><g><title>[unknown] (10,577,567 samples, 0.01%)</title><rect x="50.1176%" y="149" width="0.0119%" height="15" fill="rgb(235,49,36)" fg:x="44613588064" fg:w="10577567"/><text x="50.3676%" y="159.50"></text></g><g><title>[unknown] (10,577,567 samples, 0.01%)</title><rect x="50.1176%" y="133" width="0.0119%" height="15" fill="rgb(225,32,20)" fg:x="44613588064" fg:w="10577567"/><text x="50.3676%" y="143.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_matches (54,410,647 samples, 0.06%)</title><rect x="50.1295%" y="197" width="0.0611%" height="15" fill="rgb(215,141,46)" fg:x="44624165631" fg:w="54410647"/><text x="50.3795%" y="207.50"></text></g><g><title>malloc (98,572,609 samples, 0.11%)</title><rect x="50.1906%" y="197" width="0.1107%" height="15" fill="rgb(250,160,47)" fg:x="44678576278" fg:w="98572609"/><text x="50.4406%" y="207.50"></text></g><g><title>__memmove_avx512_unaligned_erms (10,359,697 samples, 0.01%)</title><rect x="50.8479%" y="165" width="0.0116%" height="15" fill="rgb(216,222,40)" fg:x="45263681318" fg:w="10359697"/><text x="51.0979%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (16,857,438 samples, 0.02%)</title><rect x="50.8474%" y="181" width="0.0189%" height="15" fill="rgb(234,217,39)" fg:x="45263206137" fg:w="16857438"/><text x="51.0974%" y="191.50"></text></g><g><title>__rdl_dealloc (11,517,290 samples, 0.01%)</title><rect x="50.8899%" y="165" width="0.0129%" height="15" fill="rgb(207,178,40)" fg:x="45301041096" fg:w="11517290"/><text x="51.1399%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (176,796,015 samples, 0.20%)</title><rect x="50.8663%" y="181" width="0.1986%" height="15" fill="rgb(221,136,13)" fg:x="45280063575" fg:w="176796015"/><text x="51.1163%" y="191.50"></text></g><g><title>cfree@GLIBC_2.2.5 (144,301,204 samples, 0.16%)</title><rect x="50.9028%" y="165" width="0.1621%" height="15" fill="rgb(249,199,10)" fg:x="45312558386" fg:w="144301204"/><text x="51.1528%" y="175.50"></text></g><g><title>_int_free (106,345,425 samples, 0.12%)</title><rect x="50.9455%" y="149" width="0.1195%" height="15" fill="rgb(249,222,13)" fg:x="45350514165" fg:w="106345425"/><text x="51.1955%" y="159.50"></text></g><g><title>__memmove_avx512_unaligned_erms (9,739,709 samples, 0.01%)</title><rect x="51.1968%" y="149" width="0.0109%" height="15" fill="rgb(244,185,38)" fg:x="45574205719" fg:w="9739709"/><text x="51.4468%" y="159.50"></text></g><g><title>__lll_lock_wake_private (9,732,768 samples, 0.01%)</title><rect x="56.7659%" y="133" width="0.0109%" height="15" fill="rgb(236,202,9)" fg:x="50531745807" fg:w="9732768"/><text x="57.0159%" y="143.50"></text></g><g><title>[unknown] (9,732,768 samples, 0.01%)</title><rect x="56.7659%" y="117" width="0.0109%" height="15" fill="rgb(250,229,37)" fg:x="50531745807" fg:w="9732768"/><text x="57.0159%" y="127.50"></text></g><g><title>[unknown] (9,732,768 samples, 0.01%)</title><rect x="56.7659%" y="101" width="0.0109%" height="15" fill="rgb(206,174,23)" fg:x="50531745807" fg:w="9732768"/><text x="57.0159%" y="111.50"></text></g><g><title>[unknown] (9,732,768 samples, 0.01%)</title><rect x="56.7659%" y="85" width="0.0109%" height="15" fill="rgb(211,33,43)" fg:x="50531745807" fg:w="9732768"/><text x="57.0159%" y="95.50"></text></g><g><title>[unknown] (9,732,768 samples, 0.01%)</title><rect x="56.7659%" y="69" width="0.0109%" height="15" fill="rgb(245,58,50)" fg:x="50531745807" fg:w="9732768"/><text x="57.0159%" y="79.50"></text></g><g><title>[unknown] (9,732,768 samples, 0.01%)</title><rect x="56.7659%" y="53" width="0.0109%" height="15" fill="rgb(244,68,36)" fg:x="50531745807" fg:w="9732768"/><text x="57.0159%" y="63.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (12,490,662,399 samples, 14.03%)</title><rect x="51.1904%" y="165" width="14.0317%" height="15" fill="rgb(232,229,15)" fg:x="45568514416" fg:w="12490662399"/><text x="51.4404%" y="175.50">&lt;alloc::string::Strin..</text></g><g><title>malloc (12,472,285,744 samples, 14.01%)</title><rect x="51.2110%" y="149" width="14.0110%" height="15" fill="rgb(254,30,23)" fg:x="45586891071" fg:w="12472285744"/><text x="51.4610%" y="159.50">malloc</text></g><g><title>_int_malloc (7,517,698,240 samples, 8.45%)</title><rect x="56.7769%" y="133" width="8.4452%" height="15" fill="rgb(235,160,14)" fg:x="50541478575" fg:w="7517698240"/><text x="57.0269%" y="143.50">_int_malloc</text></g><g><title>unlink_chunk.isra.0 (6,693,259,612 samples, 7.52%)</title><rect x="57.7030%" y="117" width="7.5190%" height="15" fill="rgb(212,155,44)" fg:x="51365917203" fg:w="6693259612"/><text x="57.9530%" y="127.50">unlink_chu..</text></g><g><title>malloc_consolidate (2,761,013,562 samples, 3.10%)</title><rect x="66.6297%" y="133" width="3.1016%" height="15" fill="rgb(226,2,50)" fg:x="59312276023" fg:w="2761013562"/><text x="66.8797%" y="143.50">mal..</text></g><g><title>unlink_chunk.isra.0 (504,031,637 samples, 0.57%)</title><rect x="69.1651%" y="117" width="0.5662%" height="15" fill="rgb(234,177,6)" fg:x="61569257948" fg:w="504031637"/><text x="69.4151%" y="127.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16,622,410,330 samples, 18.67%)</title><rect x="51.0649%" y="181" width="18.6731%" height="15" fill="rgb(217,24,9)" fg:x="45456859590" fg:w="16622410330"/><text x="51.3149%" y="191.50">&lt;alloc::vec::Vec&lt;T&gt; as alloc:..</text></g><g><title>malloc (4,020,093,105 samples, 4.52%)</title><rect x="65.2220%" y="165" width="4.5161%" height="15" fill="rgb(220,13,46)" fg:x="58059176815" fg:w="4020093105"/><text x="65.4720%" y="175.50">malloc</text></g><g><title>_int_malloc (3,999,855,686 samples, 4.49%)</title><rect x="65.2448%" y="149" width="4.4933%" height="15" fill="rgb(239,221,27)" fg:x="58079414234" fg:w="3999855686"/><text x="65.4948%" y="159.50">_int_..</text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (27,316,832 samples, 0.03%)</title><rect x="69.7474%" y="165" width="0.0307%" height="15" fill="rgb(222,198,25)" fg:x="62087533826" fg:w="27316832"/><text x="69.9974%" y="175.50"></text></g><g><title>&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (37,799,991 samples, 0.04%)</title><rect x="69.7381%" y="181" width="0.0425%" height="15" fill="rgb(211,99,13)" fg:x="62079269920" fg:w="37799991"/><text x="69.9881%" y="191.50"></text></g><g><title>_ZN8indexmap3map25IndexMap$LT$K$C$V$C$S$GT$4hash17hc3717bc726933d04E.llvm.4639822388844593444 (13,258,900 samples, 0.01%)</title><rect x="69.7942%" y="165" width="0.0149%" height="15" fill="rgb(232,111,31)" fg:x="62129224039" fg:w="13258900"/><text x="70.0442%" y="175.50"></text></g><g><title>&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (30,789,997 samples, 0.03%)</title><rect x="69.7805%" y="181" width="0.0346%" height="15" fill="rgb(245,82,37)" fg:x="62117069911" fg:w="30789997"/><text x="70.0305%" y="191.50"></text></g><g><title>__memmove_avx512_unaligned_erms (21,364,314 samples, 0.02%)</title><rect x="69.9627%" y="149" width="0.0240%" height="15" fill="rgb(227,149,46)" fg:x="62279178335" fg:w="21364314"/><text x="70.2127%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (121,488,589 samples, 0.14%)</title><rect x="69.9867%" y="149" width="0.1365%" height="15" fill="rgb(218,36,50)" fg:x="62300542649" fg:w="121488589"/><text x="70.2367%" y="159.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hf209fe31e4e4cc06E.llvm.998171877167897952 (118,335,173 samples, 0.13%)</title><rect x="69.9902%" y="133" width="0.1329%" height="15" fill="rgb(226,80,48)" fg:x="62303696065" fg:w="118335173"/><text x="70.2402%" y="143.50"></text></g><g><title>malloc (118,335,173 samples, 0.13%)</title><rect x="69.9902%" y="117" width="0.1329%" height="15" fill="rgb(238,224,15)" fg:x="62303696065" fg:w="118335173"/><text x="70.2402%" y="127.50"></text></g><g><title>_int_malloc (55,266,220 samples, 0.06%)</title><rect x="70.0610%" y="101" width="0.0621%" height="15" fill="rgb(241,136,10)" fg:x="62366765018" fg:w="55266220"/><text x="70.3110%" y="111.50"></text></g><g><title>_int_free_maybe_consolidate.part.0 (21,854,860 samples, 0.02%)</title><rect x="70.3614%" y="69" width="0.0246%" height="15" fill="rgb(208,32,45)" fg:x="62634141963" fg:w="21854860"/><text x="70.6114%" y="79.50"></text></g><g><title>malloc_consolidate (21,854,860 samples, 0.02%)</title><rect x="70.3614%" y="53" width="0.0246%" height="15" fill="rgb(207,135,9)" fg:x="62634141963" fg:w="21854860"/><text x="70.6114%" y="63.50"></text></g><g><title>malloc_consolidate (18,174,426 samples, 0.02%)</title><rect x="70.4542%" y="53" width="0.0204%" height="15" fill="rgb(206,86,44)" fg:x="62716711392" fg:w="18174426"/><text x="70.7042%" y="63.50"></text></g><g><title>__rdl_alloc (198,248,172 samples, 0.22%)</title><rect x="70.2667%" y="133" width="0.2227%" height="15" fill="rgb(245,177,15)" fg:x="62549861281" fg:w="198248172"/><text x="70.5167%" y="143.50"></text></g><g><title>__posix_memalign (197,749,334 samples, 0.22%)</title><rect x="70.2673%" y="117" width="0.2221%" height="15" fill="rgb(206,64,50)" fg:x="62550360119" fg:w="197749334"/><text x="70.5173%" y="127.50"></text></g><g><title>_mid_memalign.isra.0 (194,587,153 samples, 0.22%)</title><rect x="70.2708%" y="101" width="0.2186%" height="15" fill="rgb(234,36,40)" fg:x="62553522300" fg:w="194587153"/><text x="70.5208%" y="111.50"></text></g><g><title>_int_memalign (137,423,782 samples, 0.15%)</title><rect x="70.3351%" y="85" width="0.1544%" height="15" fill="rgb(213,64,8)" fg:x="62610685671" fg:w="137423782"/><text x="70.5851%" y="95.50"></text></g><g><title>_int_malloc (87,388,336 samples, 0.10%)</title><rect x="70.3913%" y="69" width="0.0982%" height="15" fill="rgb(210,75,36)" fg:x="62660721117" fg:w="87388336"/><text x="70.6413%" y="79.50"></text></g><g><title>unlink_chunk.isra.0 (13,223,635 samples, 0.01%)</title><rect x="70.4746%" y="53" width="0.0149%" height="15" fill="rgb(229,88,21)" fg:x="62734885818" fg:w="13223635"/><text x="70.7246%" y="63.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (135,608,616 samples, 0.15%)</title><rect x="70.8753%" y="101" width="0.1523%" height="15" fill="rgb(252,204,47)" fg:x="63091561016" fg:w="135608616"/><text x="71.1253%" y="111.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (261,783,581 samples, 0.29%)</title><rect x="70.7335%" y="117" width="0.2941%" height="15" fill="rgb(208,77,27)" fg:x="62965388759" fg:w="261783581"/><text x="70.9835%" y="127.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow (13,052,111 samples, 0.01%)</title><rect x="71.1575%" y="101" width="0.0147%" height="15" fill="rgb(221,76,26)" fg:x="63342763146" fg:w="13052111"/><text x="71.4075%" y="111.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (131,179,360 samples, 0.15%)</title><rect x="71.0276%" y="117" width="0.1474%" height="15" fill="rgb(225,139,18)" fg:x="63227172340" fg:w="131179360"/><text x="71.2776%" y="127.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow (25,741,841 samples, 0.03%)</title><rect x="71.2574%" y="101" width="0.0289%" height="15" fill="rgb(230,137,11)" fg:x="63431731693" fg:w="25741841"/><text x="71.5074%" y="111.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (24,736,375 samples, 0.03%)</title><rect x="71.2863%" y="101" width="0.0278%" height="15" fill="rgb(212,28,1)" fg:x="63457473588" fg:w="24736375"/><text x="71.5363%" y="111.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (22,092,620 samples, 0.02%)</title><rect x="71.2893%" y="85" width="0.0248%" height="15" fill="rgb(248,164,17)" fg:x="63460117343" fg:w="22092620"/><text x="71.5393%" y="95.50"></text></g><g><title>__vdso_clock_gettime (18,769,235 samples, 0.02%)</title><rect x="71.2930%" y="69" width="0.0211%" height="15" fill="rgb(222,171,42)" fg:x="63463440728" fg:w="18769235"/><text x="71.5430%" y="79.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (126,020,663 samples, 0.14%)</title><rect x="71.1750%" y="117" width="0.1416%" height="15" fill="rgb(243,84,45)" fg:x="63358351700" fg:w="126020663"/><text x="71.4250%" y="127.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (768,115,403 samples, 0.86%)</title><rect x="70.4894%" y="133" width="0.8629%" height="15" fill="rgb(252,49,23)" fg:x="62748109453" fg:w="768115403"/><text x="70.7394%" y="143.50"></text></g><g><title>syscall (31,852,493 samples, 0.04%)</title><rect x="71.3165%" y="117" width="0.0358%" height="15" fill="rgb(215,19,7)" fg:x="63484372363" fg:w="31852493"/><text x="71.5665%" y="127.50"></text></g><g><title>[unknown] (30,851,059 samples, 0.03%)</title><rect x="71.3177%" y="101" width="0.0347%" height="15" fill="rgb(238,81,41)" fg:x="63485373797" fg:w="30851059"/><text x="71.5677%" y="111.50"></text></g><g><title>[unknown] (29,596,853 samples, 0.03%)</title><rect x="71.3191%" y="85" width="0.0332%" height="15" fill="rgb(210,199,37)" fg:x="63486628003" fg:w="29596853"/><text x="71.5691%" y="95.50"></text></g><g><title>[unknown] (28,395,765 samples, 0.03%)</title><rect x="71.3204%" y="69" width="0.0319%" height="15" fill="rgb(244,192,49)" fg:x="63487829091" fg:w="28395765"/><text x="71.5704%" y="79.50"></text></g><g><title>[unknown] (28,393,878 samples, 0.03%)</title><rect x="71.3204%" y="53" width="0.0319%" height="15" fill="rgb(226,211,11)" fg:x="63487830978" fg:w="28393878"/><text x="71.5704%" y="63.50"></text></g><g><title>[unknown] (28,073,866 samples, 0.03%)</title><rect x="71.3208%" y="37" width="0.0315%" height="15" fill="rgb(236,162,54)" fg:x="63488150990" fg:w="28073866"/><text x="71.5708%" y="47.50"></text></g><g><title>&lt;tokio::io::util::write_all::WriteAll&lt;W&gt; as core::future::future::Future&gt;::poll (1,372,837,293 samples, 1.54%)</title><rect x="69.8151%" y="181" width="1.5422%" height="15" fill="rgb(220,229,9)" fg:x="62147859908" fg:w="1372837293"/><text x="70.0651%" y="191.50"></text></g><g><title>&lt;tokio::fs::file::File as tokio::io::async_write::AsyncWrite&gt;::poll_write (1,369,402,807 samples, 1.54%)</title><rect x="69.8190%" y="165" width="1.5383%" height="15" fill="rgb(250,87,22)" fg:x="62151294394" fg:w="1369402807"/><text x="70.0690%" y="175.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_mandatory_blocking (1,098,665,963 samples, 1.23%)</title><rect x="70.1231%" y="149" width="1.2342%" height="15" fill="rgb(239,43,17)" fg:x="62422031238" fg:w="1098665963"/><text x="70.3731%" y="159.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permits (10,832,346 samples, 0.01%)</title><rect x="71.3573%" y="181" width="0.0122%" height="15" fill="rgb(231,177,25)" fg:x="63520697201" fg:w="10832346"/><text x="71.6073%" y="191.50"></text></g><g><title>_ZN5tokio4sync15batch_semaphore9Semaphore18add_permits_locked17h7baebb2818aa783eE.llvm.1981642368882228938 (100,265,728 samples, 0.11%)</title><rect x="71.3696%" y="181" width="0.1126%" height="15" fill="rgb(219,179,1)" fg:x="63531647796" fg:w="100265728"/><text x="71.6196%" y="191.50"></text></g><g><title>__memmove_avx512_unaligned_erms (214,438,015 samples, 0.24%)</title><rect x="71.4823%" y="181" width="0.2409%" height="15" fill="rgb(238,219,53)" fg:x="63631913524" fg:w="214438015"/><text x="71.7323%" y="191.50"></text></g><g><title>__rdl_dealloc (16,107,373 samples, 0.02%)</title><rect x="71.7232%" y="181" width="0.0181%" height="15" fill="rgb(232,167,36)" fg:x="63846351539" fg:w="16107373"/><text x="71.9732%" y="191.50"></text></g><g><title>__memmove_avx512_unaligned_erms (18,290,644 samples, 0.02%)</title><rect x="71.8098%" y="133" width="0.0205%" height="15" fill="rgb(244,19,51)" fg:x="63923469472" fg:w="18290644"/><text x="72.0598%" y="143.50"></text></g><g><title>malloc (16,480,163 samples, 0.02%)</title><rect x="71.8699%" y="101" width="0.0185%" height="15" fill="rgb(224,6,22)" fg:x="63976926039" fg:w="16480163"/><text x="72.1199%" y="111.50"></text></g><g><title>__memmove_avx512_unaligned_erms (36,251,707 samples, 0.04%)</title><rect x="71.9867%" y="69" width="0.0407%" height="15" fill="rgb(224,145,5)" fg:x="64080950002" fg:w="36251707"/><text x="72.2367%" y="79.50"></text></g><g><title>_int_malloc (64,221,013 samples, 0.07%)</title><rect x="72.0283%" y="69" width="0.0721%" height="15" fill="rgb(234,130,49)" fg:x="64118004779" fg:w="64221013"/><text x="72.2783%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (285,585,469 samples, 0.32%)</title><rect x="71.7858%" y="149" width="0.3208%" height="15" fill="rgb(254,6,2)" fg:x="63902087265" fg:w="285585469"/><text x="72.0358%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (245,912,618 samples, 0.28%)</title><rect x="71.8303%" y="133" width="0.2763%" height="15" fill="rgb(208,96,46)" fg:x="63941760116" fg:w="245912618"/><text x="72.0803%" y="143.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h33f5048dc056c1bcE.llvm.12301238535100556632 (217,462,959 samples, 0.24%)</title><rect x="71.8623%" y="117" width="0.2443%" height="15" fill="rgb(239,3,39)" fg:x="63970209775" fg:w="217462959"/><text x="72.1123%" y="127.50"></text></g><g><title>realloc (194,266,532 samples, 0.22%)</title><rect x="71.8884%" y="101" width="0.2182%" height="15" fill="rgb(233,210,1)" fg:x="63993406202" fg:w="194266532"/><text x="72.1384%" y="111.50"></text></g><g><title>_int_realloc (114,547,864 samples, 0.13%)</title><rect x="71.9779%" y="85" width="0.1287%" height="15" fill="rgb(244,137,37)" fg:x="64073124870" fg:w="114547864"/><text x="72.2279%" y="95.50"></text></g><g><title>alloc::fmt::format::format_inner (333,513,326 samples, 0.37%)</title><rect x="71.7531%" y="181" width="0.3747%" height="15" fill="rgb(240,136,2)" fg:x="63873005564" fg:w="333513326"/><text x="72.0031%" y="191.50"></text></g><g><title>core::fmt::write (321,817,159 samples, 0.36%)</title><rect x="71.7662%" y="165" width="0.3615%" height="15" fill="rgb(239,18,37)" fg:x="63884701731" fg:w="321817159"/><text x="72.0162%" y="175.50"></text></g><g><title>&lt;zyst::types::CommandType as core::fmt::Debug&gt;::fmt (13,555,041 samples, 0.02%)</title><rect x="72.1125%" y="149" width="0.0152%" height="15" fill="rgb(218,185,22)" fg:x="64192963849" fg:w="13555041"/><text x="72.3625%" y="159.50"></text></g><g><title>alloc_perturb (28,983,354 samples, 0.03%)</title><rect x="80.6233%" y="117" width="0.0326%" height="15" fill="rgb(225,218,4)" fg:x="71769060262" fg:w="28983354"/><text x="80.8733%" y="127.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (11,726,982,472 samples, 13.17%)</title><rect x="72.1535%" y="165" width="13.1738%" height="15" fill="rgb(230,182,32)" fg:x="64229415061" fg:w="11726982472"/><text x="72.4035%" y="175.50">&lt;alloc::string::Stri..</text></g><g><title>malloc (11,708,489,242 samples, 13.15%)</title><rect x="72.1743%" y="149" width="13.1530%" height="15" fill="rgb(242,56,43)" fg:x="64247908291" fg:w="11708489242"/><text x="72.4243%" y="159.50">malloc</text></g><g><title>_int_malloc (6,003,622,231 samples, 6.74%)</title><rect x="78.5830%" y="133" width="6.7443%" height="15" fill="rgb(233,99,24)" fg:x="69952775302" fg:w="6003622231"/><text x="78.8330%" y="143.50">_int_mall..</text></g><g><title>unlink_chunk.isra.0 (4,158,353,917 samples, 4.67%)</title><rect x="80.6559%" y="117" width="4.6714%" height="15" fill="rgb(234,209,42)" fg:x="71798043616" fg:w="4158353917"/><text x="80.9059%" y="127.50">unlin..</text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (11,815,402,871 samples, 13.27%)</title><rect x="72.1278%" y="181" width="13.2731%" height="15" fill="rgb(227,7,12)" fg:x="64206518890" fg:w="11815402871"/><text x="72.3778%" y="191.50">alloc::slice::&lt;impl ..</text></g><g><title>malloc (65,524,228 samples, 0.07%)</title><rect x="85.3272%" y="165" width="0.0736%" height="15" fill="rgb(245,203,43)" fg:x="75956397533" fg:w="65524228"/><text x="85.5772%" y="175.50"></text></g><g><title>_int_malloc (32,665,956 samples, 0.04%)</title><rect x="85.3642%" y="149" width="0.0367%" height="15" fill="rgb(238,205,33)" fg:x="75989255805" fg:w="32665956"/><text x="85.6142%" y="159.50"></text></g><g><title>unlink_chunk.isra.0 (21,445,223 samples, 0.02%)</title><rect x="85.3768%" y="133" width="0.0241%" height="15" fill="rgb(231,56,7)" fg:x="76000476538" fg:w="21445223"/><text x="85.6268%" y="143.50"></text></g><g><title>core::unicode::unicode_data::conversions::to_upper (25,794,221 samples, 0.03%)</title><rect x="85.4621%" y="165" width="0.0290%" height="15" fill="rgb(244,186,29)" fg:x="76076410584" fg:w="25794221"/><text x="85.7121%" y="175.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_uppercase (161,906,059 samples, 0.18%)</title><rect x="85.4009%" y="181" width="0.1819%" height="15" fill="rgb(234,111,31)" fg:x="76021921761" fg:w="161906059"/><text x="85.6509%" y="191.50"></text></g><g><title>malloc (81,623,015 samples, 0.09%)</title><rect x="85.4910%" y="165" width="0.0917%" height="15" fill="rgb(241,149,10)" fg:x="76102204805" fg:w="81623015"/><text x="85.7410%" y="175.50"></text></g><g><title>_int_malloc (61,772,859 samples, 0.07%)</title><rect x="85.5133%" y="149" width="0.0694%" height="15" fill="rgb(249,206,44)" fg:x="76122054961" fg:w="61772859"/><text x="85.7633%" y="159.50"></text></g><g><title>cfree@GLIBC_2.2.5 (339,435,395 samples, 0.38%)</title><rect x="85.5827%" y="181" width="0.3813%" height="15" fill="rgb(251,153,30)" fg:x="76183827820" fg:w="339435395"/><text x="85.8327%" y="191.50"></text></g><g><title>_int_free (243,070,250 samples, 0.27%)</title><rect x="85.6910%" y="165" width="0.2731%" height="15" fill="rgb(239,152,38)" fg:x="76280192965" fg:w="243070250"/><text x="85.9410%" y="175.50"></text></g><g><title>_int_free_merge_chunk (17,609,933 samples, 0.02%)</title><rect x="85.9443%" y="149" width="0.0198%" height="15" fill="rgb(249,139,47)" fg:x="76505653282" fg:w="17609933"/><text x="86.1943%" y="159.50"></text></g><g><title>_int_free_create_chunk (17,609,933 samples, 0.02%)</title><rect x="85.9443%" y="133" width="0.0198%" height="15" fill="rgb(244,64,35)" fg:x="76505653282" fg:w="17609933"/><text x="86.1943%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,I&gt;&gt;::spec_extend (25,272,716 samples, 0.03%)</title><rect x="85.9896%" y="149" width="0.0284%" height="15" fill="rgb(216,46,15)" fg:x="76546014316" fg:w="25272716"/><text x="86.2396%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (14,137,633 samples, 0.02%)</title><rect x="86.0021%" y="133" width="0.0159%" height="15" fill="rgb(250,74,19)" fg:x="76557149399" fg:w="14137633"/><text x="86.2521%" y="143.50"></text></g><g><title>malloc (12,668,604 samples, 0.01%)</title><rect x="86.0038%" y="117" width="0.0142%" height="15" fill="rgb(249,42,33)" fg:x="76558618428" fg:w="12668604"/><text x="86.2538%" y="127.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (49,443,211 samples, 0.06%)</title><rect x="85.9640%" y="181" width="0.0555%" height="15" fill="rgb(242,149,17)" fg:x="76523263215" fg:w="49443211"/><text x="86.2140%" y="191.50"></text></g><g><title>&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::clone::Clone&gt;::clone (47,978,098 samples, 0.05%)</title><rect x="85.9657%" y="165" width="0.0539%" height="15" fill="rgb(244,29,21)" fg:x="76524728328" fg:w="47978098"/><text x="86.2157%" y="175.50"></text></g><g><title>__rdl_dealloc (47,804,179 samples, 0.05%)</title><rect x="86.0727%" y="165" width="0.0537%" height="15" fill="rgb(220,130,37)" fg:x="76619969145" fg:w="47804179"/><text x="86.3227%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::string::String&gt;&gt; (5,273,254,622 samples, 5.92%)</title><rect x="86.0196%" y="181" width="5.9238%" height="15" fill="rgb(211,67,2)" fg:x="76572706426" fg:w="5273254622"/><text x="86.2696%" y="191.50">core::pt..</text></g><g><title>cfree@GLIBC_2.2.5 (5,174,374,298 samples, 5.81%)</title><rect x="86.1307%" y="165" width="5.8127%" height="15" fill="rgb(235,68,52)" fg:x="76671586750" fg:w="5174374298"/><text x="86.3807%" y="175.50">cfree@G..</text></g><g><title>_int_free (5,015,339,043 samples, 5.63%)</title><rect x="86.3093%" y="149" width="5.6341%" height="15" fill="rgb(246,142,3)" fg:x="76830622005" fg:w="5015339043"/><text x="86.5593%" y="159.50">_int_fr..</text></g><g><title>core::ptr::drop_in_place&lt;zyst::aof::write_aof::{{closure}}&gt; (13,928,633 samples, 0.02%)</title><rect x="91.9434%" y="181" width="0.0156%" height="15" fill="rgb(241,25,7)" fg:x="81845961048" fg:w="13928633"/><text x="92.1934%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;zyst::types::CommandArgs&gt; (35,664,625 samples, 0.04%)</title><rect x="91.9604%" y="181" width="0.0401%" height="15" fill="rgb(242,119,39)" fg:x="81861075407" fg:w="35664625"/><text x="92.2104%" y="191.50"></text></g><g><title>cfree@GLIBC_2.2.5 (34,091,482 samples, 0.04%)</title><rect x="91.9622%" y="165" width="0.0383%" height="15" fill="rgb(241,98,45)" fg:x="81862648550" fg:w="34091482"/><text x="92.2122%" y="175.50"></text></g><g><title>_int_free (34,091,482 samples, 0.04%)</title><rect x="91.9622%" y="149" width="0.0383%" height="15" fill="rgb(254,28,30)" fg:x="81862648550" fg:w="34091482"/><text x="92.2122%" y="159.50"></text></g><g><title>core::ptr::drop_in_place&lt;zyst::types::KeyBase&lt;indexmap::map::IndexMap&lt;alloc::string::String,alloc::string::String&gt;&gt;&gt; (23,095,999 samples, 0.03%)</title><rect x="92.0045%" y="181" width="0.0259%" height="15" fill="rgb(241,142,54)" fg:x="81900356685" fg:w="23095999"/><text x="92.2545%" y="191.50"></text></g><g><title>cfree@GLIBC_2.2.5 (23,095,999 samples, 0.03%)</title><rect x="92.0045%" y="165" width="0.0259%" height="15" fill="rgb(222,85,15)" fg:x="81900356685" fg:w="23095999"/><text x="92.2545%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;tokio::fs::file::File&gt; (71,917,110 samples, 0.08%)</title><rect x="92.0305%" y="181" width="0.0808%" height="15" fill="rgb(210,85,47)" fg:x="81923452684" fg:w="71917110"/><text x="92.2805%" y="191.50"></text></g><g><title>tokio::runtime::task::state::State::drop_join_handle_fast (47,327,103 samples, 0.05%)</title><rect x="92.0581%" y="165" width="0.0532%" height="15" fill="rgb(224,206,25)" fg:x="81948042691" fg:w="47327103"/><text x="92.3081%" y="175.50"></text></g><g><title>_ZN8indexmap3map25IndexMap$LT$K$C$V$C$S$GT$4hash17hc3717bc726933d04E.llvm.4639822388844593444 (43,082,488 samples, 0.05%)</title><rect x="92.1384%" y="149" width="0.0484%" height="15" fill="rgb(243,201,19)" fg:x="82019494572" fg:w="43082488"/><text x="92.3884%" y="159.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get (73,042,100 samples, 0.08%)</title><rect x="92.1113%" y="181" width="0.0821%" height="15" fill="rgb(236,59,4)" fg:x="81995369794" fg:w="73042100"/><text x="92.3613%" y="191.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (73,042,100 samples, 0.08%)</title><rect x="92.1113%" y="165" width="0.0821%" height="15" fill="rgb(254,179,45)" fg:x="81995369794" fg:w="73042100"/><text x="92.3613%" y="175.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (23,007,266 samples, 0.03%)</title><rect x="92.1933%" y="181" width="0.0258%" height="15" fill="rgb(226,14,10)" fg:x="82068411894" fg:w="23007266"/><text x="92.4433%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (14,866,611 samples, 0.02%)</title><rect x="92.2274%" y="165" width="0.0167%" height="15" fill="rgb(244,27,41)" fg:x="82098789276" fg:w="14866611"/><text x="92.4774%" y="175.50"></text></g><g><title>malloc (13,439,133 samples, 0.02%)</title><rect x="92.2290%" y="149" width="0.0151%" height="15" fill="rgb(235,35,32)" fg:x="82100216754" fg:w="13439133"/><text x="92.4790%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (57,987,054 samples, 0.07%)</title><rect x="92.2499%" y="117" width="0.0651%" height="15" fill="rgb(218,68,31)" fg:x="82118777181" fg:w="57987054"/><text x="92.4999%" y="127.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (52,074,495 samples, 0.06%)</title><rect x="92.2565%" y="101" width="0.0585%" height="15" fill="rgb(207,120,37)" fg:x="82124689740" fg:w="52074495"/><text x="92.5065%" y="111.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h33f5048dc056c1bcE.llvm.12301238535100556632 (50,372,765 samples, 0.06%)</title><rect x="92.2584%" y="85" width="0.0566%" height="15" fill="rgb(227,98,0)" fg:x="82126391470" fg:w="50372765"/><text x="92.5084%" y="95.50"></text></g><g><title>realloc (43,168,510 samples, 0.05%)</title><rect x="92.2665%" y="69" width="0.0485%" height="15" fill="rgb(207,7,3)" fg:x="82133595725" fg:w="43168510"/><text x="92.5165%" y="79.50"></text></g><g><title>_int_realloc (24,436,664 samples, 0.03%)</title><rect x="92.2876%" y="53" width="0.0275%" height="15" fill="rgb(206,98,19)" fg:x="82152327571" fg:w="24436664"/><text x="92.5376%" y="63.50"></text></g><g><title>_int_malloc (16,955,344 samples, 0.02%)</title><rect x="92.2960%" y="37" width="0.0190%" height="15" fill="rgb(217,5,26)" fg:x="82159808891" fg:w="16955344"/><text x="92.5460%" y="47.50"></text></g><g><title>alloc::fmt::format::format_inner (66,578,770 samples, 0.07%)</title><rect x="92.2451%" y="149" width="0.0748%" height="15" fill="rgb(235,190,38)" fg:x="82114475927" fg:w="66578770"/><text x="92.4951%" y="159.50"></text></g><g><title>core::fmt::write (63,436,978 samples, 0.07%)</title><rect x="92.2486%" y="133" width="0.0713%" height="15" fill="rgb(247,86,24)" fg:x="82117617719" fg:w="63436978"/><text x="92.4986%" y="143.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (83,797,434 samples, 0.09%)</title><rect x="92.2441%" y="165" width="0.0941%" height="15" fill="rgb(205,101,16)" fg:x="82113655887" fg:w="83797434"/><text x="92.4941%" y="175.50"></text></g><g><title>malloc (16,398,624 samples, 0.02%)</title><rect x="92.3199%" y="149" width="0.0184%" height="15" fill="rgb(246,168,33)" fg:x="82181054697" fg:w="16398624"/><text x="92.5699%" y="159.50"></text></g><g><title>malloc (70,202,487 samples, 0.08%)</title><rect x="92.3866%" y="85" width="0.0789%" height="15" fill="rgb(231,114,1)" fg:x="82240480557" fg:w="70202487"/><text x="92.6366%" y="95.50"></text></g><g><title>_int_malloc (25,548,100 samples, 0.03%)</title><rect x="92.4368%" y="69" width="0.0287%" height="15" fill="rgb(207,184,53)" fg:x="82285134944" fg:w="25548100"/><text x="92.6868%" y="79.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (142,120,151 samples, 0.16%)</title><rect x="92.3568%" y="133" width="0.1597%" height="15" fill="rgb(224,95,51)" fg:x="82213902580" fg:w="142120151"/><text x="92.6068%" y="143.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (126,009,299 samples, 0.14%)</title><rect x="92.3748%" y="117" width="0.1416%" height="15" fill="rgb(212,188,45)" fg:x="82230013432" fg:w="126009299"/><text x="92.6248%" y="127.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h33f5048dc056c1bcE.llvm.12301238535100556632 (120,967,052 samples, 0.14%)</title><rect x="92.3805%" y="101" width="0.1359%" height="15" fill="rgb(223,154,38)" fg:x="82235055679" fg:w="120967052"/><text x="92.6305%" y="111.50"></text></g><g><title>realloc (45,339,687 samples, 0.05%)</title><rect x="92.4655%" y="85" width="0.0509%" height="15" fill="rgb(251,22,52)" fg:x="82310683044" fg:w="45339687"/><text x="92.7155%" y="95.50"></text></g><g><title>_int_realloc (20,733,473 samples, 0.02%)</title><rect x="92.4931%" y="69" width="0.0233%" height="15" fill="rgb(229,209,22)" fg:x="82335289258" fg:w="20733473"/><text x="92.7431%" y="79.50"></text></g><g><title>_int_malloc (12,271,938 samples, 0.01%)</title><rect x="92.5026%" y="53" width="0.0138%" height="15" fill="rgb(234,138,34)" fg:x="82343750793" fg:w="12271938"/><text x="92.7526%" y="63.50"></text></g><g><title>alloc::fmt::format::format_inner (163,143,639 samples, 0.18%)</title><rect x="92.3392%" y="165" width="0.1833%" height="15" fill="rgb(212,95,11)" fg:x="82198278918" fg:w="163143639"/><text x="92.5892%" y="175.50"></text></g><g><title>core::fmt::write (153,891,478 samples, 0.17%)</title><rect x="92.3496%" y="149" width="0.1729%" height="15" fill="rgb(240,179,47)" fg:x="82207531079" fg:w="153891478"/><text x="92.5996%" y="159.50"></text></g><g><title>alloc::str::join_generic_copy (34,257,244 samples, 0.04%)</title><rect x="92.5225%" y="165" width="0.0385%" height="15" fill="rgb(240,163,11)" fg:x="82361422557" fg:w="34257244"/><text x="92.7725%" y="175.50"></text></g><g><title>zyst::aof::format_command_args (313,518,260 samples, 0.35%)</title><rect x="92.2192%" y="181" width="0.3522%" height="15" fill="rgb(236,37,12)" fg:x="82091419160" fg:w="313518260"/><text x="92.4692%" y="191.50"></text></g><g><title>cfree@GLIBC_2.2.5 (9,257,619 samples, 0.01%)</title><rect x="92.5610%" y="165" width="0.0104%" height="15" fill="rgb(232,164,16)" fg:x="82395679801" fg:w="9257619"/><text x="92.8110%" y="175.50"></text></g><g><title>__strlen_evex (62,301,556 samples, 0.07%)</title><rect x="92.7390%" y="85" width="0.0700%" height="15" fill="rgb(244,205,15)" fg:x="82554201637" fg:w="62301556"/><text x="92.9890%" y="95.50"></text></g><g><title>getenv (89,741,054 samples, 0.10%)</title><rect x="92.7173%" y="101" width="0.1008%" height="15" fill="rgb(223,117,47)" fg:x="82534868807" fg:w="89741054"/><text x="92.9673%" y="111.50"></text></g><g><title>_ZN3std3sys3pal4unix2os6getenv28_$u7b$$u7b$closure$u7d$$u7d$17h566fcac9165df7eeE.llvm.10859909865963893318 (317,017,177 samples, 0.36%)</title><rect x="92.6830%" y="117" width="0.3561%" height="15" fill="rgb(244,107,35)" fg:x="82504302545" fg:w="317017177"/><text x="92.9330%" y="127.50"></text></g><g><title>malloc (196,709,861 samples, 0.22%)</title><rect x="92.8181%" y="101" width="0.2210%" height="15" fill="rgb(205,140,8)" fg:x="82624609861" fg:w="196709861"/><text x="93.0681%" y="111.50"></text></g><g><title>_int_malloc (131,409,953 samples, 0.15%)</title><rect x="92.8915%" y="85" width="0.1476%" height="15" fill="rgb(228,84,46)" fg:x="82689909769" fg:w="131409953"/><text x="93.1415%" y="95.50"></text></g><g><title>dirs::home_dir (415,650,670 samples, 0.47%)</title><rect x="92.5760%" y="165" width="0.4669%" height="15" fill="rgb(254,188,9)" fg:x="82409088058" fg:w="415650670"/><text x="92.8260%" y="175.50"></text></g><g><title>dirs_sys::target_unix_not_redox::home_dir (414,311,067 samples, 0.47%)</title><rect x="92.5775%" y="149" width="0.4654%" height="15" fill="rgb(206,112,54)" fg:x="82410427661" fg:w="414311067"/><text x="92.8275%" y="159.50"></text></g><g><title>std::env::_var_os (412,920,363 samples, 0.46%)</title><rect x="92.5791%" y="133" width="0.4639%" height="15" fill="rgb(216,84,49)" fg:x="82411818365" fg:w="412920363"/><text x="92.8291%" y="143.50"></text></g><g><title>__memmove_avx512_unaligned_erms (57,736,007 samples, 0.06%)</title><rect x="93.2041%" y="85" width="0.0649%" height="15" fill="rgb(214,194,35)" fg:x="82968167869" fg:w="57736007"/><text x="93.4541%" y="95.50"></text></g><g><title>_int_malloc (62,670,560 samples, 0.07%)</title><rect x="93.2707%" y="85" width="0.0704%" height="15" fill="rgb(249,28,3)" fg:x="83027505525" fg:w="62670560"/><text x="93.5207%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (262,066,224 samples, 0.29%)</title><rect x="93.0488%" y="149" width="0.2944%" height="15" fill="rgb(222,56,52)" fg:x="82829964338" fg:w="262066224"/><text x="93.2988%" y="159.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h218f43d8fb585840E.llvm.7876563497402748525 (251,154,244 samples, 0.28%)</title><rect x="93.0611%" y="133" width="0.2821%" height="15" fill="rgb(245,217,50)" fg:x="82840876318" fg:w="251154244"/><text x="93.3111%" y="143.50"></text></g><g><title>realloc (242,350,443 samples, 0.27%)</title><rect x="93.0710%" y="117" width="0.2722%" height="15" fill="rgb(213,201,24)" fg:x="82849680119" fg:w="242350443"/><text x="93.3210%" y="127.50"></text></g><g><title>_int_realloc (146,832,377 samples, 0.16%)</title><rect x="93.1783%" y="101" width="0.1649%" height="15" fill="rgb(248,116,28)" fg:x="82945198185" fg:w="146832377"/><text x="93.4283%" y="111.50"></text></g><g><title>zyst::aof::get_aof_log_dir (818,332,079 samples, 0.92%)</title><rect x="92.5714%" y="181" width="0.9193%" height="15" fill="rgb(219,72,43)" fg:x="82404937420" fg:w="818332079"/><text x="92.8214%" y="191.50"></text></g><g><title>std::path::Path::_join (398,530,771 samples, 0.45%)</title><rect x="93.0429%" y="165" width="0.4477%" height="15" fill="rgb(209,138,14)" fg:x="82824738728" fg:w="398530771"/><text x="93.2929%" y="175.50"></text></g><g><title>malloc (131,238,937 samples, 0.15%)</title><rect x="93.3432%" y="149" width="0.1474%" height="15" fill="rgb(222,18,33)" fg:x="83092030562" fg:w="131238937"/><text x="93.5932%" y="159.50"></text></g><g><title>_int_malloc (98,987,447 samples, 0.11%)</title><rect x="93.3794%" y="133" width="0.1112%" height="15" fill="rgb(213,199,7)" fg:x="83124282052" fg:w="98987447"/><text x="93.6294%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (13,670,763 samples, 0.02%)</title><rect x="93.5488%" y="133" width="0.0154%" height="15" fill="rgb(250,110,10)" fg:x="83275005984" fg:w="13670763"/><text x="93.7988%" y="143.50"></text></g><g><title>malloc (10,347,084 samples, 0.01%)</title><rect x="93.5525%" y="117" width="0.0116%" height="15" fill="rgb(248,123,6)" fg:x="83278329663" fg:w="10347084"/><text x="93.8025%" y="127.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (47,867,072 samples, 0.05%)</title><rect x="93.5168%" y="149" width="0.0538%" height="15" fill="rgb(206,91,31)" fg:x="83246517052" fg:w="47867072"/><text x="93.7668%" y="159.50"></text></g><g><title>zyst::commands::build::build_hset_command (77,435,721 samples, 0.09%)</title><rect x="93.4906%" y="181" width="0.0870%" height="15" fill="rgb(211,154,13)" fg:x="83223269499" fg:w="77435721"/><text x="93.7406%" y="191.50"></text></g><g><title>&lt;indexmap::map::IndexMap&lt;K,V,S&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (65,031,598 samples, 0.07%)</title><rect x="93.5046%" y="165" width="0.0731%" height="15" fill="rgb(225,148,7)" fg:x="83235673622" fg:w="65031598"/><text x="93.7546%" y="175.50"></text></g><g><title>zyst::commands::build::build_lpop_command (12,960,111 samples, 0.01%)</title><rect x="93.5806%" y="181" width="0.0146%" height="15" fill="rgb(220,160,43)" fg:x="83303322659" fg:w="12960111"/><text x="93.8306%" y="191.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (31,590,397 samples, 0.04%)</title><rect x="93.6164%" y="149" width="0.0355%" height="15" fill="rgb(213,52,39)" fg:x="83335178677" fg:w="31590397"/><text x="93.8664%" y="159.50"></text></g><g><title>malloc (30,007,241 samples, 0.03%)</title><rect x="93.6181%" y="133" width="0.0337%" height="15" fill="rgb(243,137,7)" fg:x="83336761833" fg:w="30007241"/><text x="93.8681%" y="143.50"></text></g><g><title>zyst::commands::build::build_lpush_command (69,084,146 samples, 0.08%)</title><rect x="93.5951%" y="181" width="0.0776%" height="15" fill="rgb(230,79,13)" fg:x="83316282770" fg:w="69084146"/><text x="93.8451%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (67,017,959 samples, 0.08%)</title><rect x="93.5975%" y="165" width="0.0753%" height="15" fill="rgb(247,105,23)" fg:x="83318348957" fg:w="67017959"/><text x="93.8475%" y="175.50"></text></g><g><title>malloc (18,597,842 samples, 0.02%)</title><rect x="93.6518%" y="149" width="0.0209%" height="15" fill="rgb(223,179,41)" fg:x="83366769074" fg:w="18597842"/><text x="93.9018%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (65,707,835 samples, 0.07%)</title><rect x="93.6939%" y="165" width="0.0738%" height="15" fill="rgb(218,9,34)" fg:x="83404224479" fg:w="65707835"/><text x="93.9439%" y="175.50"></text></g><g><title>malloc (55,884,198 samples, 0.06%)</title><rect x="93.7050%" y="149" width="0.0628%" height="15" fill="rgb(222,106,8)" fg:x="83414048116" fg:w="55884198"/><text x="93.9550%" y="159.50"></text></g><g><title>_int_malloc (11,185,604 samples, 0.01%)</title><rect x="93.7552%" y="133" width="0.0126%" height="15" fill="rgb(211,220,0)" fg:x="83458746710" fg:w="11185604"/><text x="94.0052%" y="143.50"></text></g><g><title>unlink_chunk.isra.0 (11,185,604 samples, 0.01%)</title><rect x="93.7552%" y="117" width="0.0126%" height="15" fill="rgb(229,52,16)" fg:x="83458746710" fg:w="11185604"/><text x="94.0052%" y="127.50"></text></g><g><title>zyst::commands::build::build_lrange_command (100,859,914 samples, 0.11%)</title><rect x="93.6727%" y="181" width="0.1133%" height="15" fill="rgb(212,155,18)" fg:x="83385366916" fg:w="100859914"/><text x="93.9227%" y="191.50"></text></g><g><title>malloc (9,232,319 samples, 0.01%)</title><rect x="93.7757%" y="165" width="0.0104%" height="15" fill="rgb(242,21,14)" fg:x="83476994511" fg:w="9232319"/><text x="94.0257%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (11,026,725 samples, 0.01%)</title><rect x="93.7946%" y="165" width="0.0124%" height="15" fill="rgb(222,19,48)" fg:x="83493870189" fg:w="11026725"/><text x="94.0446%" y="175.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (15,490,417 samples, 0.02%)</title><rect x="93.8117%" y="149" width="0.0174%" height="15" fill="rgb(232,45,27)" fg:x="83509035908" fg:w="15490417"/><text x="94.0617%" y="159.50"></text></g><g><title>malloc (14,559,935 samples, 0.02%)</title><rect x="93.8127%" y="133" width="0.0164%" height="15" fill="rgb(249,103,42)" fg:x="83509966390" fg:w="14559935"/><text x="94.0627%" y="143.50"></text></g><g><title>zyst::commands::build::build_rpush_command (34,780,470 samples, 0.04%)</title><rect x="93.7946%" y="181" width="0.0391%" height="15" fill="rgb(246,81,33)" fg:x="83493870189" fg:w="34780470"/><text x="94.0446%" y="191.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (23,753,745 samples, 0.03%)</title><rect x="93.8070%" y="165" width="0.0267%" height="15" fill="rgb(252,33,42)" fg:x="83504896914" fg:w="23753745"/><text x="94.0570%" y="175.50"></text></g><g><title>_ZN8indexmap3map25IndexMap$LT$K$C$V$C$S$GT$4hash17hc3717bc726933d04E.llvm.4639822388844593444 (13,326,106 samples, 0.01%)</title><rect x="93.9049%" y="149" width="0.0150%" height="15" fill="rgb(209,212,41)" fg:x="83592011386" fg:w="13326106"/><text x="94.1549%" y="159.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (18,669,476 samples, 0.02%)</title><rect x="93.9010%" y="165" width="0.0210%" height="15" fill="rgb(207,154,6)" fg:x="83588534927" fg:w="18669476"/><text x="94.1510%" y="175.50"></text></g><g><title>zyst::commands::keys::incr_decr::_{{closure}} (76,312,600 samples, 0.09%)</title><rect x="93.8429%" y="181" width="0.0857%" height="15" fill="rgb(223,64,47)" fg:x="83536797186" fg:w="76312600"/><text x="94.0929%" y="191.50"></text></g><g><title>__memmove_avx512_unaligned_erms (23,025,556 samples, 0.03%)</title><rect x="93.9535%" y="149" width="0.0259%" height="15" fill="rgb(211,161,38)" fg:x="83635315168" fg:w="23025556"/><text x="94.2035%" y="159.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (32,888,055 samples, 0.04%)</title><rect x="93.9523%" y="165" width="0.0369%" height="15" fill="rgb(219,138,40)" fg:x="83634233342" fg:w="32888055"/><text x="94.2023%" y="175.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (40,546,088 samples, 0.05%)</title><rect x="93.9893%" y="165" width="0.0455%" height="15" fill="rgb(241,228,46)" fg:x="83667121397" fg:w="40546088"/><text x="94.2393%" y="175.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permits (21,989,829 samples, 0.02%)</title><rect x="94.0348%" y="165" width="0.0247%" height="15" fill="rgb(223,209,38)" fg:x="83707667485" fg:w="21989829"/><text x="94.2848%" y="175.50"></text></g><g><title>_ZN5tokio4sync15batch_semaphore9Semaphore18add_permits_locked17h7baebb2818aa783eE.llvm.1981642368882228938 (27,193,058 samples, 0.03%)</title><rect x="94.0595%" y="165" width="0.0305%" height="15" fill="rgb(236,164,45)" fg:x="83729657314" fg:w="27193058"/><text x="94.3095%" y="175.50"></text></g><g><title>cfree@GLIBC_2.2.5 (30,571,781 samples, 0.03%)</title><rect x="94.0901%" y="165" width="0.0343%" height="15" fill="rgb(231,15,5)" fg:x="83756850372" fg:w="30571781"/><text x="94.3401%" y="175.50"></text></g><g><title>_int_free (20,765,062 samples, 0.02%)</title><rect x="94.1011%" y="149" width="0.0233%" height="15" fill="rgb(252,35,15)" fg:x="83766657091" fg:w="20765062"/><text x="94.3511%" y="159.50"></text></g><g><title>_ZN8indexmap3map25IndexMap$LT$K$C$V$C$S$GT$4hash17hc3717bc726933d04E.llvm.4639822388844593444 (14,981,874 samples, 0.02%)</title><rect x="94.1307%" y="149" width="0.0168%" height="15" fill="rgb(248,181,18)" fg:x="83793026169" fg:w="14981874"/><text x="94.3807%" y="159.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (22,642,136 samples, 0.03%)</title><rect x="94.1244%" y="165" width="0.0254%" height="15" fill="rgb(233,39,42)" fg:x="83787422153" fg:w="22642136"/><text x="94.3744%" y="175.50"></text></g><g><title>zyst::commands::lists::pop_list::_{{closure}} (218,693,196 samples, 0.25%)</title><rect x="93.9286%" y="181" width="0.2457%" height="15" fill="rgb(238,110,33)" fg:x="83613109786" fg:w="218693196"/><text x="94.1786%" y="191.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::write::_{{closure}} (21,738,693 samples, 0.02%)</title><rect x="94.1498%" y="165" width="0.0244%" height="15" fill="rgb(233,195,10)" fg:x="83810064289" fg:w="21738693"/><text x="94.3998%" y="175.50"></text></g><g><title>&lt;tokio::sync::mpsc::bounded::Semaphore as tokio::sync::mpsc::chan::Semaphore&gt;::add_permits (22,377,972 samples, 0.03%)</title><rect x="94.2267%" y="165" width="0.0251%" height="15" fill="rgb(254,105,3)" fg:x="83878461632" fg:w="22377972"/><text x="94.4767%" y="175.50"></text></g><g><title>_ZN5tokio4sync15batch_semaphore9Semaphore18add_permits_locked17h7baebb2818aa783eE.llvm.1981642368882228938 (47,763,039 samples, 0.05%)</title><rect x="94.2518%" y="165" width="0.0537%" height="15" fill="rgb(221,225,9)" fg:x="83900839604" fg:w="47763039"/><text x="94.5018%" y="175.50"></text></g><g><title>cfree@GLIBC_2.2.5 (32,400,147 samples, 0.04%)</title><rect x="94.3059%" y="165" width="0.0364%" height="15" fill="rgb(224,227,45)" fg:x="83949030831" fg:w="32400147"/><text x="94.5559%" y="175.50"></text></g><g><title>_int_free (20,244,510 samples, 0.02%)</title><rect x="94.3196%" y="149" width="0.0227%" height="15" fill="rgb(229,198,43)" fg:x="83961186468" fg:w="20244510"/><text x="94.5696%" y="159.50"></text></g><g><title>_ZN8indexmap3map25IndexMap$LT$K$C$V$C$S$GT$4hash17hc3717bc726933d04E.llvm.4639822388844593444 (25,827,933 samples, 0.03%)</title><rect x="94.3588%" y="149" width="0.0290%" height="15" fill="rgb(206,209,35)" fg:x="83996094271" fg:w="25827933"/><text x="94.6088%" y="159.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index_of (51,804,767 samples, 0.06%)</title><rect x="94.3423%" y="165" width="0.0582%" height="15" fill="rgb(245,195,53)" fg:x="83981430978" fg:w="51804767"/><text x="94.5923%" y="175.50"></text></g><g><title>__memcmp_evex_movbe (11,313,541 samples, 0.01%)</title><rect x="94.3878%" y="149" width="0.0127%" height="15" fill="rgb(240,92,26)" fg:x="84021922204" fg:w="11313541"/><text x="94.6378%" y="159.50"></text></g><g><title>zyst::commands::lists::push_to_list::_{{closure}} (230,218,757 samples, 0.26%)</title><rect x="94.1743%" y="181" width="0.2586%" height="15" fill="rgb(207,40,23)" fg:x="83831802982" fg:w="230218757"/><text x="94.4243%" y="191.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::write::_{{closure}} (28,785,994 samples, 0.03%)</title><rect x="94.4005%" y="165" width="0.0323%" height="15" fill="rgb(223,111,35)" fg:x="84033235745" fg:w="28785994"/><text x="94.6505%" y="175.50"></text></g><g><title>__memmove_avx512_unaligned_erms (83,108,471 samples, 0.09%)</title><rect x="94.5352%" y="101" width="0.0934%" height="15" fill="rgb(229,147,28)" fg:x="84153072735" fg:w="83108471"/><text x="94.7852%" y="111.50"></text></g><g><title>_int_malloc (98,942,613 samples, 0.11%)</title><rect x="94.6287%" y="101" width="0.1111%" height="15" fill="rgb(211,29,28)" fg:x="84236336924" fg:w="98942613"/><text x="94.8787%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVecInner&lt;A&gt;::reserve::do_reserve_and_handle (270,228,039 samples, 0.30%)</title><rect x="94.4363%" y="165" width="0.3036%" height="15" fill="rgb(228,72,33)" fg:x="84065053292" fg:w="270228039"/><text x="94.6863%" y="175.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17h218f43d8fb585840E.llvm.7876563497402748525 (268,092,219 samples, 0.30%)</title><rect x="94.4387%" y="149" width="0.3012%" height="15" fill="rgb(205,214,31)" fg:x="84067189112" fg:w="268092219"/><text x="94.6887%" y="159.50"></text></g><g><title>realloc (259,580,545 samples, 0.29%)</title><rect x="94.4482%" y="133" width="0.2916%" height="15" fill="rgb(224,111,15)" fg:x="84075700786" fg:w="259580545"/><text x="94.6982%" y="143.50"></text></g><g><title>_int_realloc (190,785,811 samples, 0.21%)</title><rect x="94.5255%" y="117" width="0.2143%" height="15" fill="rgb(253,21,26)" fg:x="84144495520" fg:w="190785811"/><text x="94.7755%" y="127.50"></text></g><g><title>std::path::Path::_join (293,166,541 samples, 0.33%)</title><rect x="94.4329%" y="181" width="0.3293%" height="15" fill="rgb(245,139,43)" fg:x="84062021739" fg:w="293166541"/><text x="94.6829%" y="191.50"></text></g><g><title>malloc (19,906,949 samples, 0.02%)</title><rect x="94.7398%" y="165" width="0.0224%" height="15" fill="rgb(252,170,7)" fg:x="84335281331" fg:w="19906949"/><text x="94.9898%" y="175.50"></text></g><g><title>_ZN3std3sys3pal4unix2fs9try_statx17h4bee785d8c598a95E.llvm.12208559908432827118 (40,521,339 samples, 0.05%)</title><rect x="94.7674%" y="165" width="0.0455%" height="15" fill="rgb(231,118,14)" fg:x="84359807464" fg:w="40521339"/><text x="95.0174%" y="175.50"></text></g><g><title>statx (25,052,949 samples, 0.03%)</title><rect x="94.7848%" y="149" width="0.0281%" height="15" fill="rgb(238,83,0)" fg:x="84375275854" fg:w="25052949"/><text x="95.0348%" y="159.50"></text></g><g><title>[unknown] (24,382,534 samples, 0.03%)</title><rect x="94.7855%" y="133" width="0.0274%" height="15" fill="rgb(221,39,39)" fg:x="84375946269" fg:w="24382534"/><text x="95.0355%" y="143.50"></text></g><g><title>[unknown] (19,543,035 samples, 0.02%)</title><rect x="94.7910%" y="117" width="0.0220%" height="15" fill="rgb(222,119,46)" fg:x="84380785768" fg:w="19543035"/><text x="95.0410%" y="127.50"></text></g><g><title>[unknown] (17,845,210 samples, 0.02%)</title><rect x="94.7929%" y="101" width="0.0200%" height="15" fill="rgb(222,165,49)" fg:x="84382483593" fg:w="17845210"/><text x="95.0429%" y="111.50"></text></g><g><title>[unknown] (11,673,589 samples, 0.01%)</title><rect x="94.7998%" y="85" width="0.0131%" height="15" fill="rgb(219,113,52)" fg:x="84388655214" fg:w="11673589"/><text x="95.0498%" y="95.50"></text></g><g><title>__memmove_avx512_unaligned_erms (26,661,476 samples, 0.03%)</title><rect x="94.8129%" y="165" width="0.0300%" height="15" fill="rgb(214,7,15)" fg:x="84400328803" fg:w="26661476"/><text x="95.0629%" y="175.50"></text></g><g><title>std::sys::pal::unix::fs::stat (94,719,917 samples, 0.11%)</title><rect x="94.7622%" y="181" width="0.1064%" height="15" fill="rgb(235,32,4)" fg:x="84355188280" fg:w="94719917"/><text x="95.0122%" y="191.50"></text></g><g><title>core::ffi::c_str::CStr::from_bytes_with_nul (22,917,918 samples, 0.03%)</title><rect x="94.8429%" y="165" width="0.0257%" height="15" fill="rgb(238,90,54)" fg:x="84426990279" fg:w="22917918"/><text x="95.0929%" y="175.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::try_read_output (191,610,347 samples, 0.22%)</title><rect x="95.0705%" y="149" width="0.2152%" height="15" fill="rgb(213,208,19)" fg:x="84629621987" fg:w="191610347"/><text x="95.3205%" y="159.50"></text></g><g><title>tokio::runtime::task::harness::can_read_output (140,910,886 samples, 0.16%)</title><rect x="95.1275%" y="133" width="0.1583%" height="15" fill="rgb(233,156,4)" fg:x="84680321448" fg:w="140910886"/><text x="95.3775%" y="143.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (9,914,330 samples, 0.01%)</title><rect x="95.2746%" y="117" width="0.0111%" height="15" fill="rgb(207,194,5)" fg:x="84811318004" fg:w="9914330"/><text x="95.5246%" y="127.50"></text></g><g><title>&lt;tokio::runtime::task::join::JoinHandle&lt;T&gt; as core::future::future::Future&gt;::poll (268,962,066 samples, 0.30%)</title><rect x="95.0176%" y="165" width="0.3021%" height="15" fill="rgb(206,111,30)" fg:x="84582543844" fg:w="268962066"/><text x="95.2676%" y="175.50"></text></g><g><title>tokio::runtime::task::raw::RawTask::try_read_output (30,273,576 samples, 0.03%)</title><rect x="95.2858%" y="149" width="0.0340%" height="15" fill="rgb(243,70,54)" fg:x="84821232334" fg:w="30273576"/><text x="95.5358%" y="159.50"></text></g><g><title>tokio::fs::file::File::from_std (20,513,556 samples, 0.02%)</title><rect x="95.3268%" y="165" width="0.0230%" height="15" fill="rgb(242,28,8)" fg:x="84857734131" fg:w="20513556"/><text x="95.5768%" y="175.50"></text></g><g><title>malloc (15,422,104 samples, 0.02%)</title><rect x="95.3325%" y="149" width="0.0173%" height="15" fill="rgb(219,106,18)" fg:x="84862825583" fg:w="15422104"/><text x="95.5825%" y="159.50"></text></g><g><title>parking_lot_core::parking_lot::lock_bucket_pair (128,947,048 samples, 0.14%)</title><rect x="95.8210%" y="117" width="0.1449%" height="15" fill="rgb(244,222,10)" fg:x="85297676443" fg:w="128947048"/><text x="96.0710%" y="127.50"></text></g><g><title>parking_lot::condvar::Condvar::notify_one_slow (241,119,827 samples, 0.27%)</title><rect x="95.6950%" y="133" width="0.2709%" height="15" fill="rgb(236,179,52)" fg:x="85185505823" fg:w="241119827"/><text x="95.9450%" y="143.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (95,270,360 samples, 0.11%)</title><rect x="95.9658%" y="133" width="0.1070%" height="15" fill="rgb(213,23,39)" fg:x="85426625650" fg:w="95270360"/><text x="96.2158%" y="143.50"></text></g><g><title>parking_lot_core::word_lock::WordLock::lock_slow (13,374,895 samples, 0.02%)</title><rect x="96.1129%" y="117" width="0.0150%" height="15" fill="rgb(238,48,10)" fg:x="85557557615" fg:w="13374895"/><text x="96.3629%" y="127.50"></text></g><g><title>std::sys::pal::unix::time::Timespec::now (39,336,492 samples, 0.04%)</title><rect x="96.1279%" y="117" width="0.0442%" height="15" fill="rgb(251,196,23)" fg:x="85570932510" fg:w="39336492"/><text x="96.3779%" y="127.50"></text></g><g><title>clock_gettime@@GLIBC_2.17 (37,327,830 samples, 0.04%)</title><rect x="96.1302%" y="101" width="0.0419%" height="15" fill="rgb(250,152,24)" fg:x="85572941172" fg:w="37327830"/><text x="96.3802%" y="111.50"></text></g><g><title>__vdso_clock_gettime (36,046,750 samples, 0.04%)</title><rect x="96.1316%" y="85" width="0.0405%" height="15" fill="rgb(209,150,17)" fg:x="85574222252" fg:w="36046750"/><text x="96.3816%" y="95.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (88,383,794 samples, 0.10%)</title><rect x="96.0729%" y="133" width="0.0993%" height="15" fill="rgb(234,202,34)" fg:x="85521896010" fg:w="88383794"/><text x="96.3229%" y="143.50"></text></g><g><title>syscall (30,736,535 samples, 0.03%)</title><rect x="96.1722%" y="133" width="0.0345%" height="15" fill="rgb(253,148,53)" fg:x="85610369377" fg:w="30736535"/><text x="96.4222%" y="143.50"></text></g><g><title>[unknown] (30,736,535 samples, 0.03%)</title><rect x="96.1722%" y="117" width="0.0345%" height="15" fill="rgb(218,129,16)" fg:x="85610369377" fg:w="30736535"/><text x="96.4222%" y="127.50"></text></g><g><title>[unknown] (28,744,079 samples, 0.03%)</title><rect x="96.1745%" y="101" width="0.0323%" height="15" fill="rgb(216,85,19)" fg:x="85612361833" fg:w="28744079"/><text x="96.4245%" y="111.50"></text></g><g><title>[unknown] (28,744,079 samples, 0.03%)</title><rect x="96.1745%" y="85" width="0.0323%" height="15" fill="rgb(235,228,7)" fg:x="85612361833" fg:w="28744079"/><text x="96.4245%" y="95.50"></text></g><g><title>[unknown] (28,744,079 samples, 0.03%)</title><rect x="96.1745%" y="69" width="0.0323%" height="15" fill="rgb(245,175,0)" fg:x="85612361833" fg:w="28744079"/><text x="96.4245%" y="79.50"></text></g><g><title>[unknown] (28,230,505 samples, 0.03%)</title><rect x="96.1751%" y="53" width="0.0317%" height="15" fill="rgb(208,168,36)" fg:x="85612875407" fg:w="28230505"/><text x="96.4251%" y="63.50"></text></g><g><title>[unknown] (17,724,906 samples, 0.02%)</title><rect x="96.1869%" y="37" width="0.0199%" height="15" fill="rgb(246,171,24)" fg:x="85623381006" fg:w="17724906"/><text x="96.4369%" y="47.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (681,885,855 samples, 0.77%)</title><rect x="95.4408%" y="149" width="0.7660%" height="15" fill="rgb(215,142,24)" fg:x="84959222700" fg:w="681885855"/><text x="95.6908%" y="159.50"></text></g><g><title>tokio::runtime::scheduler::Handle::current (17,842,613 samples, 0.02%)</title><rect x="96.2068%" y="149" width="0.0200%" height="15" fill="rgb(250,187,7)" fg:x="85641108555" fg:w="17842613"/><text x="96.4568%" y="159.50"></text></g><g><title>_int_free_create_chunk (21,946,591 samples, 0.02%)</title><rect x="96.3856%" y="69" width="0.0247%" height="15" fill="rgb(228,66,33)" fg:x="85800337906" fg:w="21946591"/><text x="96.6356%" y="79.50"></text></g><g><title>_int_free_maybe_consolidate.part.0 (41,425,718 samples, 0.05%)</title><rect x="96.4103%" y="69" width="0.0465%" height="15" fill="rgb(234,215,21)" fg:x="85822284497" fg:w="41425718"/><text x="96.6603%" y="79.50"></text></g><g><title>malloc_consolidate (40,925,155 samples, 0.05%)</title><rect x="96.4109%" y="53" width="0.0460%" height="15" fill="rgb(222,191,20)" fg:x="85822785060" fg:w="40925155"/><text x="96.6609%" y="63.50"></text></g><g><title>malloc_consolidate (37,140,109 samples, 0.04%)</title><rect x="96.5470%" y="53" width="0.0417%" height="15" fill="rgb(245,79,54)" fg:x="85943992590" fg:w="37140109"/><text x="96.7970%" y="63.50"></text></g><g><title>__rdl_alloc (330,574,830 samples, 0.37%)</title><rect x="96.2276%" y="133" width="0.3714%" height="15" fill="rgb(240,10,37)" fg:x="85659671052" fg:w="330574830"/><text x="96.4776%" y="143.50"></text></g><g><title>__posix_memalign (330,574,830 samples, 0.37%)</title><rect x="96.2276%" y="117" width="0.3714%" height="15" fill="rgb(214,192,32)" fg:x="85659671052" fg:w="330574830"/><text x="96.4776%" y="127.50"></text></g><g><title>_mid_memalign.isra.0 (330,574,830 samples, 0.37%)</title><rect x="96.2276%" y="101" width="0.3714%" height="15" fill="rgb(209,36,54)" fg:x="85659671052" fg:w="330574830"/><text x="96.4776%" y="111.50"></text></g><g><title>_int_memalign (213,917,039 samples, 0.24%)</title><rect x="96.3587%" y="85" width="0.2403%" height="15" fill="rgb(220,10,11)" fg:x="85776328843" fg:w="213917039"/><text x="96.6087%" y="95.50"></text></g><g><title>_int_malloc (121,628,191 samples, 0.14%)</title><rect x="96.4624%" y="69" width="0.1366%" height="15" fill="rgb(221,106,17)" fg:x="85868617691" fg:w="121628191"/><text x="96.7124%" y="79.50"></text></g><g><title>tokio::runtime::task::core::Cell&lt;T,S&gt;::new (333,860,927 samples, 0.38%)</title><rect x="96.2268%" y="149" width="0.3750%" height="15" fill="rgb(251,142,44)" fg:x="85658951168" fg:w="333860927"/><text x="96.4768%" y="159.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (1,143,063,927 samples, 1.28%)</title><rect x="95.3498%" y="165" width="1.2841%" height="15" fill="rgb(238,13,15)" fg:x="84878247687" fg:w="1143063927"/><text x="95.5998%" y="175.50"></text></g><g><title>tokio::runtime::task::id::Id::next (28,499,519 samples, 0.03%)</title><rect x="96.6019%" y="149" width="0.0320%" height="15" fill="rgb(208,107,27)" fg:x="85992812095" fg:w="28499519"/><text x="96.8519%" y="159.50"></text></g><g><title>_int_free_create_chunk (13,795,293 samples, 0.02%)</title><rect x="96.7484%" y="101" width="0.0155%" height="15" fill="rgb(205,136,37)" fg:x="86123208071" fg:w="13795293"/><text x="96.9984%" y="111.50"></text></g><g><title>cfree@GLIBC_2.2.5 (123,566,562 samples, 0.14%)</title><rect x="96.6364%" y="149" width="0.1388%" height="15" fill="rgb(250,205,27)" fg:x="86023507079" fg:w="123566562"/><text x="96.8864%" y="159.50"></text></g><g><title>_int_free (113,629,135 samples, 0.13%)</title><rect x="96.6475%" y="133" width="0.1276%" height="15" fill="rgb(210,80,43)" fg:x="86033444506" fg:w="113629135"/><text x="96.8975%" y="143.50"></text></g><g><title>_int_free_merge_chunk (35,427,477 samples, 0.04%)</title><rect x="96.7354%" y="117" width="0.0398%" height="15" fill="rgb(247,160,36)" fg:x="86111646164" fg:w="35427477"/><text x="96.9854%" y="127.50"></text></g><g><title>unlink_chunk.isra.0 (10,070,277 samples, 0.01%)</title><rect x="96.7639%" y="101" width="0.0113%" height="15" fill="rgb(234,13,49)" fg:x="86137003364" fg:w="10070277"/><text x="97.0139%" y="111.50"></text></g><g><title>tokio::runtime::task::state::State::ref_dec (43,082,735 samples, 0.05%)</title><rect x="96.7823%" y="149" width="0.0484%" height="15" fill="rgb(234,122,0)" fg:x="86153427937" fg:w="43082735"/><text x="97.0323%" y="159.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (222,538,265 samples, 0.25%)</title><rect x="96.6339%" y="165" width="0.2500%" height="15" fill="rgb(207,146,38)" fg:x="86021311614" fg:w="222538265"/><text x="96.8839%" y="175.50"></text></g><g><title>tokio::runtime::task::state::State::transition_to_join_handle_dropped (47,339,207 samples, 0.05%)</title><rect x="96.8307%" y="149" width="0.0532%" height="15" fill="rgb(207,177,25)" fg:x="86196510672" fg:w="47339207"/><text x="97.0807%" y="159.50"></text></g><g><title>tokio::fs::open_options::OpenOptions::open::_{{closure}} (1,807,843,491 samples, 2.03%)</title><rect x="94.8686%" y="181" width="2.0309%" height="15" fill="rgb(211,178,42)" fg:x="84449908197" fg:w="1807843491"/><text x="95.1186%" y="191.50">t..</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::drop_join_handle_slow (32,979,212 samples, 0.04%)</title><rect x="96.8995%" y="181" width="0.0370%" height="15" fill="rgb(230,69,54)" fg:x="86257751688" fg:w="32979212"/><text x="97.1495%" y="191.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (19,000,982 samples, 0.02%)</title><rect x="96.9596%" y="165" width="0.0213%" height="15" fill="rgb(214,135,41)" fg:x="86311246980" fg:w="19000982"/><text x="97.2096%" y="175.50"></text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::read::_{{closure}} (43,224,839 samples, 0.05%)</title><rect x="96.9368%" y="181" width="0.0486%" height="15" fill="rgb(237,67,25)" fg:x="86290968125" fg:w="43224839"/><text x="97.1868%" y="191.50"></text></g><g><title>&lt;tokio::sync::batch_semaphore::Acquire as core::future::future::Future&gt;::poll (17,625,548 samples, 0.02%)</title><rect x="97.0068%" y="165" width="0.0198%" height="15" fill="rgb(222,189,50)" fg:x="86353275506" fg:w="17625548"/><text x="97.2568%" y="175.50"></text></g><g><title>zyst::process::process_command::_{{closure}} (41,593,940,264 samples, 46.73%)</title><rect x="50.3014%" y="197" width="46.7254%" height="15" fill="rgb(245,148,34)" fg:x="44777148887" fg:w="41593940264"/><text x="50.5514%" y="207.50">zyst::process::process_command::_{{closure}}</text></g><g><title>tokio::sync::rwlock::RwLock&lt;T&gt;::write::_{{closure}} (36,896,187 samples, 0.04%)</title><rect x="96.9854%" y="181" width="0.0414%" height="15" fill="rgb(222,29,6)" fg:x="86334192964" fg:w="36896187"/><text x="97.2354%" y="191.50"></text></g><g><title>__rust_alloc (12,072,483 samples, 0.01%)</title><rect x="97.3815%" y="149" width="0.0136%" height="15" fill="rgb(221,189,43)" fg:x="86686841553" fg:w="12072483"/><text x="97.6315%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_one (259,928,887 samples, 0.29%)</title><rect x="97.3248%" y="181" width="0.2920%" height="15" fill="rgb(207,36,27)" fg:x="86636314142" fg:w="259928887"/><text x="97.5748%" y="191.50"></text></g><g><title>_ZN5alloc7raw_vec11finish_grow17hb3f069b0a2c2259eE.llvm.12188277937332800301 (225,974,367 samples, 0.25%)</title><rect x="97.3629%" y="165" width="0.2539%" height="15" fill="rgb(217,90,24)" fg:x="86670268662" fg:w="225974367"/><text x="97.6129%" y="175.50"></text></g><g><title>malloc (197,328,993 samples, 0.22%)</title><rect x="97.3951%" y="149" width="0.2217%" height="15" fill="rgb(224,66,35)" fg:x="86698914036" fg:w="197328993"/><text x="97.6451%" y="159.50"></text></g><g><title>_int_malloc (38,591,448 samples, 0.04%)</title><rect x="97.5734%" y="133" width="0.0434%" height="15" fill="rgb(221,13,50)" fg:x="86857651581" fg:w="38591448"/><text x="97.8234%" y="143.50"></text></g><g><title>core::str::pattern::StrSearcher::new (62,600,399 samples, 0.07%)</title><rect x="97.6168%" y="181" width="0.0703%" height="15" fill="rgb(236,68,49)" fg:x="86896243029" fg:w="62600399"/><text x="97.8668%" y="191.50"></text></g><g><title>__memcmp_evex_movbe (21,674,117 samples, 0.02%)</title><rect x="97.6627%" y="165" width="0.0243%" height="15" fill="rgb(229,146,28)" fg:x="86937169311" fg:w="21674117"/><text x="97.9127%" y="175.50"></text></g><g><title>zyst::resp::parse_resp_command (858,378,971 samples, 0.96%)</title><rect x="97.0268%" y="197" width="0.9643%" height="15" fill="rgb(225,31,38)" fg:x="86371089151" fg:w="858378971"/><text x="97.2768%" y="207.50"></text></g><g><title>malloc (270,624,694 samples, 0.30%)</title><rect x="97.6871%" y="181" width="0.3040%" height="15" fill="rgb(250,208,3)" fg:x="86958843428" fg:w="270624694"/><text x="97.9371%" y="191.50"></text></g><g><title>_int_malloc (91,057,198 samples, 0.10%)</title><rect x="97.8888%" y="165" width="0.1023%" height="15" fill="rgb(246,54,23)" fg:x="87138410924" fg:w="91057198"/><text x="98.1388%" y="175.50"></text></g><g><title>[unknown] (38,721,633 samples, 0.04%)</title><rect x="98.1454%" y="133" width="0.0435%" height="15" fill="rgb(243,76,11)" fg:x="87366865625" fg:w="38721633"/><text x="98.3954%" y="143.50"></text></g><g><title>[unknown] (38,721,633 samples, 0.04%)</title><rect x="98.1454%" y="117" width="0.0435%" height="15" fill="rgb(245,21,50)" fg:x="87366865625" fg:w="38721633"/><text x="98.3954%" y="127.50"></text></g><g><title>[unknown] (38,721,633 samples, 0.04%)</title><rect x="98.1454%" y="101" width="0.0435%" height="15" fill="rgb(228,9,43)" fg:x="87366865625" fg:w="38721633"/><text x="98.3954%" y="111.50"></text></g><g><title>[unknown] (29,528,973 samples, 0.03%)</title><rect x="98.1558%" y="85" width="0.0332%" height="15" fill="rgb(208,100,47)" fg:x="87376058285" fg:w="29528973"/><text x="98.4058%" y="95.50"></text></g><g><title>[unknown] (13,680,220 samples, 0.02%)</title><rect x="98.1736%" y="69" width="0.0154%" height="15" fill="rgb(232,26,8)" fg:x="87391907038" fg:w="13680220"/><text x="98.4236%" y="79.50"></text></g><g><title>[unknown] (13,680,220 samples, 0.02%)</title><rect x="98.1736%" y="53" width="0.0154%" height="15" fill="rgb(216,166,38)" fg:x="87391907038" fg:w="13680220"/><text x="98.4236%" y="63.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Read&gt;::read (67,737,817 samples, 0.08%)</title><rect x="98.1304%" y="165" width="0.0761%" height="15" fill="rgb(251,202,51)" fg:x="87353517160" fg:w="67737817"/><text x="98.3804%" y="175.50"></text></g><g><title>__libc_recv (59,623,462 samples, 0.07%)</title><rect x="98.1396%" y="149" width="0.0670%" height="15" fill="rgb(254,216,34)" fg:x="87361631515" fg:w="59623462"/><text x="98.3896%" y="159.50"></text></g><g><title>__GI___pthread_enable_asynccancel (15,667,719 samples, 0.02%)</title><rect x="98.1889%" y="133" width="0.0176%" height="15" fill="rgb(251,32,27)" fg:x="87405587258" fg:w="15667719"/><text x="98.4389%" y="143.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Read&gt;::read (68,694,582 samples, 0.08%)</title><rect x="98.1294%" y="181" width="0.0772%" height="15" fill="rgb(208,127,28)" fg:x="87352560396" fg:w="68694582"/><text x="98.3794%" y="191.50"></text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_read (466,845,152 samples, 0.52%)</title><rect x="97.9911%" y="197" width="0.5244%" height="15" fill="rgb(224,137,22)" fg:x="87229468122" fg:w="466845152"/><text x="98.2411%" y="207.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (275,058,296 samples, 0.31%)</title><rect x="98.2065%" y="181" width="0.3090%" height="15" fill="rgb(254,70,32)" fg:x="87421254978" fg:w="275058296"/><text x="98.4565%" y="191.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (221,242,029 samples, 0.25%)</title><rect x="98.2670%" y="165" width="0.2485%" height="15" fill="rgb(229,75,37)" fg:x="87475071245" fg:w="221242029"/><text x="98.5170%" y="175.50"></text></g><g><title>tokio::runtime::task::waker::clone_waker (74,854,967 samples, 0.08%)</title><rect x="98.4314%" y="149" width="0.0841%" height="15" fill="rgb(252,64,23)" fg:x="87621458307" fg:w="74854967"/><text x="98.6814%" y="159.50"></text></g><g><title>[unknown] (50,200,078 samples, 0.06%)</title><rect x="98.5739%" y="133" width="0.0564%" height="15" fill="rgb(232,162,48)" fg:x="87748278749" fg:w="50200078"/><text x="98.8239%" y="143.50"></text></g><g><title>[unknown] (32,710,662 samples, 0.04%)</title><rect x="98.5936%" y="117" width="0.0367%" height="15" fill="rgb(246,160,12)" fg:x="87765768165" fg:w="32710662"/><text x="98.8436%" y="127.50"></text></g><g><title>[unknown] (32,710,662 samples, 0.04%)</title><rect x="98.5936%" y="101" width="0.0367%" height="15" fill="rgb(247,166,0)" fg:x="87765768165" fg:w="32710662"/><text x="98.8436%" y="111.50"></text></g><g><title>[unknown] (23,310,266 samples, 0.03%)</title><rect x="98.6041%" y="85" width="0.0262%" height="15" fill="rgb(249,219,21)" fg:x="87775168561" fg:w="23310266"/><text x="98.8541%" y="95.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (98,165,971 samples, 0.11%)</title><rect x="98.5314%" y="165" width="0.1103%" height="15" fill="rgb(205,209,3)" fg:x="87710429839" fg:w="98165971"/><text x="98.7814%" y="175.50"></text></g><g><title>__send (81,031,577 samples, 0.09%)</title><rect x="98.5506%" y="149" width="0.0910%" height="15" fill="rgb(243,44,1)" fg:x="87727564233" fg:w="81031577"/><text x="98.8006%" y="159.50"></text></g><g><title>__GI___pthread_enable_asynccancel (10,116,979 samples, 0.01%)</title><rect x="98.6303%" y="133" width="0.0114%" height="15" fill="rgb(206,159,16)" fg:x="87798478831" fg:w="10116979"/><text x="98.8803%" y="143.50"></text></g><g><title>&lt;&amp;mio::net::tcp::stream::TcpStream as std::io::Write&gt;::write (101,767,360 samples, 0.11%)</title><rect x="98.5273%" y="181" width="0.1143%" height="15" fill="rgb(244,77,30)" fg:x="87706828487" fg:w="101767360"/><text x="98.7773%" y="191.50"></text></g><g><title>_ZN5zyst4main28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hcebd3a7bd4632661E.llvm.1201884707149956783 (76,186,639,970 samples, 85.59%)</title><rect x="13.1003%" y="213" width="85.5859%" height="15" fill="rgb(218,69,12)" fg:x="11661628641" fg:w="76186639970"/><text x="13.3503%" y="223.50">_ZN5zyst4main28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hcebd3a7bd4632661E.llvm.1201884707149956783</text></g><g><title>tokio::io::poll_evented::PollEvented&lt;E&gt;::poll_write (151,955,337 samples, 0.17%)</title><rect x="98.5155%" y="197" width="0.1707%" height="15" fill="rgb(212,87,7)" fg:x="87696313274" fg:w="151955337"/><text x="98.7655%" y="207.50"></text></g><g><title>tokio::runtime::io::registration::Registration::poll_ready (39,672,764 samples, 0.04%)</title><rect x="98.6417%" y="181" width="0.0446%" height="15" fill="rgb(245,114,25)" fg:x="87808595847" fg:w="39672764"/><text x="98.8917%" y="191.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (18,271,421 samples, 0.02%)</title><rect x="98.6657%" y="165" width="0.0205%" height="15" fill="rgb(210,61,42)" fg:x="87829997190" fg:w="18271421"/><text x="98.9157%" y="175.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (76,205,223,177 samples, 85.61%)</title><rect x="13.0854%" y="229" width="85.6068%" height="15" fill="rgb(211,52,33)" fg:x="11648324806" fg:w="76205223177"/><text x="13.3354%" y="239.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::state::State::transition_to_idle (70,302,269 samples, 0.08%)</title><rect x="98.6922%" y="229" width="0.0790%" height="15" fill="rgb(234,58,33)" fg:x="87853547983" fg:w="70302269"/><text x="98.9422%" y="239.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (76,344,676,118 samples, 85.76%)</title><rect x="13.0531%" y="245" width="85.7634%" height="15" fill="rgb(220,115,36)" fg:x="11619611469" fg:w="76344676118"/><text x="13.3031%" y="255.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::state::State::transition_to_running (40,437,335 samples, 0.05%)</title><rect x="98.7711%" y="229" width="0.0454%" height="15" fill="rgb(243,153,54)" fg:x="87923850252" fg:w="40437335"/><text x="99.0211%" y="239.50"></text></g><g><title>&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll (84,040,687,032 samples, 94.41%)</title><rect x="4.4089%" y="325" width="94.4089%" height="15" fill="rgb(251,47,18)" fg:x="3924708105" fg:w="84040687032"/><text x="4.6589%" y="335.50">&lt;tokio::runtime::blocking::task::BlockingTask&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::run (83,295,180,360 samples, 93.57%)</title><rect x="5.2464%" y="309" width="93.5714%" height="15" fill="rgb(242,102,42)" fg:x="4670214777" fg:w="83295180360"/><text x="5.4964%" y="319.50">tokio::runtime::scheduler::multi_thread::worker::run</text></g><g><title>tokio::runtime::context::runtime::enter_runtime (83,295,180,360 samples, 93.57%)</title><rect x="5.2464%" y="293" width="93.5714%" height="15" fill="rgb(234,31,38)" fg:x="4670214777" fg:w="83295180360"/><text x="5.4964%" y="303.50">tokio::runtime::context::runtime::enter_runtime</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run (83,295,180,360 samples, 93.57%)</title><rect x="5.2464%" y="277" width="93.5714%" height="15" fill="rgb(221,117,51)" fg:x="4670214777" fg:w="83295180360"/><text x="5.4964%" y="287.50">tokio::runtime::scheduler::multi_thread::worker::Context::run</text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::Context::run_task (77,203,691,233 samples, 86.73%)</title><rect x="12.0894%" y="261" width="86.7284%" height="15" fill="rgb(212,20,18)" fg:x="10761703904" fg:w="77203691233"/><text x="12.3394%" y="271.50">tokio::runtime::scheduler::multi_thread::worker::Context::run_task</text></g><g><title>&lt;tokio::runtime::task::core::TaskIdGuard as core::ops::drop::Drop&gt;::drop (13,554,208 samples, 0.02%)</title><rect x="98.8178%" y="325" width="0.0152%" height="15" fill="rgb(245,133,36)" fg:x="87965395137" fg:w="13554208"/><text x="99.0678%" y="335.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (76,659,441 samples, 0.09%)</title><rect x="98.8361%" y="325" width="0.0861%" height="15" fill="rgb(212,6,19)" fg:x="87981643433" fg:w="76659441"/><text x="99.0861%" y="335.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (84,169,474,705 samples, 94.55%)</title><rect x="4.3714%" y="341" width="94.5536%" height="15" fill="rgb(218,1,36)" fg:x="3891283306" fg:w="84169474705"/><text x="4.6214%" y="351.50">tokio::runtime::task::core::Core&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::set_stage (63,741,860 samples, 0.07%)</title><rect x="98.9249%" y="341" width="0.0716%" height="15" fill="rgb(246,84,54)" fg:x="88060758011" fg:w="63741860"/><text x="99.1749%" y="351.50"></text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (85,115,704,212 samples, 95.62%)</title><rect x="3.4109%" y="357" width="95.6166%" height="15" fill="rgb(242,110,6)" fg:x="3036290402" fg:w="85115704212"/><text x="3.6609%" y="367.50">tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll</text></g><g><title>tokio::runtime::task::state::State::transition_to_running (27,494,743 samples, 0.03%)</title><rect x="98.9965%" y="341" width="0.0309%" height="15" fill="rgb(214,47,5)" fg:x="88124499871" fg:w="27494743"/><text x="99.2465%" y="351.50"></text></g><g><title>std::sys::backtrace::__rust_begin_short_backtrace (87,612,317,045 samples, 98.42%)</title><rect x="0.6138%" y="389" width="98.4212%" height="15" fill="rgb(218,159,25)" fg:x="546420540" fg:w="87612317045"/><text x="0.8638%" y="399.50">std::sys::backtrace::__rust_begin_short_backtrace</text></g><g><title>tokio::runtime::blocking::pool::Inner::run (87,612,317,045 samples, 98.42%)</title><rect x="0.6138%" y="373" width="98.4212%" height="15" fill="rgb(215,211,28)" fg:x="546420540" fg:w="87612317045"/><text x="0.8638%" y="383.50">tokio::runtime::blocking::pool::Inner::run</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (87,612,339,832 samples, 98.42%)</title><rect x="0.6138%" y="405" width="98.4212%" height="15" fill="rgb(238,59,32)" fg:x="546420540" fg:w="87612339832"/><text x="0.8638%" y="415.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>__GI___clone3 (87,612,421,160 samples, 98.42%)</title><rect x="0.6138%" y="453" width="98.4213%" height="15" fill="rgb(226,82,3)" fg:x="546379385" fg:w="87612421160"/><text x="0.8638%" y="463.50">__GI___clone3</text></g><g><title>start_thread (87,612,421,159 samples, 98.42%)</title><rect x="0.6138%" y="437" width="98.4213%" height="15" fill="rgb(240,164,32)" fg:x="546379386" fg:w="87612421159"/><text x="0.8638%" y="447.50">start_thread</text></g><g><title>std::sys::pal::unix::thread::Thread::new::thread_start (87,612,380,005 samples, 98.42%)</title><rect x="0.6138%" y="421" width="98.4212%" height="15" fill="rgb(232,46,7)" fg:x="546420540" fg:w="87612380005"/><text x="0.8638%" y="431.50">std::sys::pal::unix::thread::Thread::new::thread_start</text></g><g><title>__libc_recv (32,582,280 samples, 0.04%)</title><rect x="99.0450%" y="453" width="0.0366%" height="15" fill="rgb(229,129,53)" fg:x="88167659053" fg:w="32582280"/><text x="99.2950%" y="463.50"></text></g><g><title>[unknown] (32,582,280 samples, 0.04%)</title><rect x="99.0450%" y="437" width="0.0366%" height="15" fill="rgb(234,188,29)" fg:x="88167659053" fg:w="32582280"/><text x="99.2950%" y="447.50"></text></g><g><title>core::fmt::write (376,149,085 samples, 0.42%)</title><rect x="99.0860%" y="437" width="0.4226%" height="15" fill="rgb(246,141,4)" fg:x="88204115784" fg:w="376149085"/><text x="99.3360%" y="447.50"></text></g><g><title>alloc::fmt::format::format_inner (425,990,467 samples, 0.48%)</title><rect x="99.0860%" y="453" width="0.4785%" height="15" fill="rgb(229,23,39)" fg:x="88204115784" fg:w="425990467"/><text x="99.3360%" y="463.50"></text></g><g><title>malloc (49,841,382 samples, 0.06%)</title><rect x="99.5085%" y="437" width="0.0560%" height="15" fill="rgb(206,12,3)" fg:x="88580264869" fg:w="49841382"/><text x="99.7585%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (110,488,803 samples, 0.12%)</title><rect x="99.5789%" y="437" width="0.1241%" height="15" fill="rgb(252,226,20)" fg:x="88642889546" fg:w="110488803"/><text x="99.8289%" y="447.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (110,263,981 samples, 0.12%)</title><rect x="99.7030%" y="437" width="0.1239%" height="15" fill="rgb(216,123,35)" fg:x="88753378349" fg:w="110263981"/><text x="99.9530%" y="447.50"></text></g><g><title>core::fmt::Formatter::pad (11,958,373 samples, 0.01%)</title><rect x="99.8269%" y="437" width="0.0134%" height="15" fill="rgb(212,68,40)" fg:x="88863642330" fg:w="11958373"/><text x="100.0769%" y="447.50"></text></g><g><title>core::fmt::write (251,002,410 samples, 0.28%)</title><rect x="99.5789%" y="453" width="0.2820%" height="15" fill="rgb(254,125,32)" fg:x="88642889546" fg:w="251002410"/><text x="99.8289%" y="463.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for usize&gt;::fmt (18,291,253 samples, 0.02%)</title><rect x="99.8403%" y="437" width="0.0205%" height="15" fill="rgb(253,97,22)" fg:x="88875600703" fg:w="18291253"/><text x="100.0903%" y="447.50"></text></g><g><title>std::time::Instant::saturating_duration_since (15,150,162 samples, 0.02%)</title><rect x="99.8625%" y="453" width="0.0170%" height="15" fill="rgb(241,101,14)" fg:x="88895359819" fg:w="15150162"/><text x="100.1125%" y="463.50"></text></g><g><title>syscall (15,150,162 samples, 0.02%)</title><rect x="99.8625%" y="437" width="0.0170%" height="15" fill="rgb(238,103,29)" fg:x="88895359819" fg:w="15150162"/><text x="100.1125%" y="447.50"></text></g><g><title>[unknown] (15,150,162 samples, 0.02%)</title><rect x="99.8625%" y="421" width="0.0170%" height="15" fill="rgb(233,195,47)" fg:x="88895359819" fg:w="15150162"/><text x="100.1125%" y="431.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_mandatory_blocking (30,797,801 samples, 0.03%)</title><rect x="99.8795%" y="453" width="0.0346%" height="15" fill="rgb(246,218,30)" fg:x="88910509981" fg:w="30797801"/><text x="100.1295%" y="463.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (30,797,801 samples, 0.03%)</title><rect x="99.8795%" y="437" width="0.0346%" height="15" fill="rgb(219,145,47)" fg:x="88910509981" fg:w="30797801"/><text x="100.1295%" y="447.50"></text></g><g><title>syscall (30,797,801 samples, 0.03%)</title><rect x="99.8795%" y="421" width="0.0346%" height="15" fill="rgb(243,12,26)" fg:x="88910509981" fg:w="30797801"/><text x="100.1295%" y="431.50"></text></g><g><title>[unknown] (30,797,801 samples, 0.03%)</title><rect x="99.8795%" y="405" width="0.0346%" height="15" fill="rgb(214,87,16)" fg:x="88910509981" fg:w="30797801"/><text x="100.1295%" y="415.50"></text></g><g><title>tokio::runtime::io::scheduled_io::ScheduledIo::poll_readiness (39,791,432 samples, 0.04%)</title><rect x="99.9141%" y="453" width="0.0447%" height="15" fill="rgb(208,99,42)" fg:x="88941307782" fg:w="39791432"/><text x="100.1641%" y="463.50"></text></g><g><title>&lt;&amp;std::net::tcp::TcpStream as std::io::Write&gt;::write (39,791,432 samples, 0.04%)</title><rect x="99.9141%" y="437" width="0.0447%" height="15" fill="rgb(253,99,2)" fg:x="88941307782" fg:w="39791432"/><text x="100.1641%" y="447.50"></text></g><g><title>__send (39,791,432 samples, 0.04%)</title><rect x="99.9141%" y="421" width="0.0447%" height="15" fill="rgb(220,168,23)" fg:x="88941307782" fg:w="39791432"/><text x="100.1641%" y="431.50"></text></g><g><title>[unknown] (39,791,432 samples, 0.04%)</title><rect x="99.9141%" y="405" width="0.0447%" height="15" fill="rgb(242,38,24)" fg:x="88941307782" fg:w="39791432"/><text x="100.1641%" y="415.50"></text></g><g><title>tokio::runtime::scheduler::multi_thread::worker::&lt;impl tokio::runtime::scheduler::multi_thread::handle::Handle&gt;::schedule_task (8,902,492 samples, 0.01%)</title><rect x="99.9588%" y="453" width="0.0100%" height="15" fill="rgb(225,182,9)" fg:x="88981099214" fg:w="8902492"/><text x="100.2088%" y="463.50"></text></g><g><title>all (89,017,751,082 samples, 100%)</title><rect x="0.0000%" y="485" width="100.0000%" height="15" fill="rgb(243,178,37)" fg:x="0" fg:w="89017751082"/><text x="0.2500%" y="495.50"></text></g><g><title>tokio-runtime-w (89,011,903,946 samples, 99.99%)</title><rect x="0.0066%" y="469" width="99.9934%" height="15" fill="rgb(232,139,19)" fg:x="5847136" fg:w="89011903946"/><text x="0.2566%" y="479.50">tokio-runtime-w</text></g><g><title>tokio::runtime::task::harness::Harness&lt;T,S&gt;::poll (27,749,376 samples, 0.03%)</title><rect x="99.9688%" y="453" width="0.0312%" height="15" fill="rgb(225,201,24)" fg:x="88990001706" fg:w="27749376"/><text x="100.2188%" y="463.50"></text></g><g><title>tokio::runtime::task::core::Core&lt;T,S&gt;::poll (27,749,376 samples, 0.03%)</title><rect x="99.9688%" y="437" width="0.0312%" height="15" fill="rgb(221,47,46)" fg:x="88990001706" fg:w="27749376"/><text x="100.2188%" y="447.50"></text></g><g><title>_ZN5zyst4main28_$u7b$$u7b$closure$u7d$$u7d$28_$u7b$$u7b$closure$u7d$$u7d$17hcebd3a7bd4632661E.llvm.1201884707149956783 (27,749,376 samples, 0.03%)</title><rect x="99.9688%" y="421" width="0.0312%" height="15" fill="rgb(249,23,13)" fg:x="88990001706" fg:w="27749376"/><text x="100.2188%" y="431.50"></text></g><g><title>zyst::process::process_command::_{{closure}} (27,749,376 samples, 0.03%)</title><rect x="99.9688%" y="405" width="0.0312%" height="15" fill="rgb(219,9,5)" fg:x="88990001706" fg:w="27749376"/><text x="100.2188%" y="415.50"></text></g><g><title>tokio::fs::open_options::OpenOptions::open::_{{closure}} (27,749,376 samples, 0.03%)</title><rect x="99.9688%" y="389" width="0.0312%" height="15" fill="rgb(254,171,16)" fg:x="88990001706" fg:w="27749376"/><text x="100.2188%" y="399.50"></text></g><g><title>tokio::runtime::blocking::pool::spawn_blocking (27,749,376 samples, 0.03%)</title><rect x="99.9688%" y="373" width="0.0312%" height="15" fill="rgb(230,171,20)" fg:x="88990001706" fg:w="27749376"/><text x="100.2188%" y="383.50"></text></g><g><title>tokio::runtime::blocking::pool::Spawner::spawn_task (27,749,376 samples, 0.03%)</title><rect x="99.9688%" y="357" width="0.0312%" height="15" fill="rgb(210,71,41)" fg:x="88990001706" fg:w="27749376"/><text x="100.2188%" y="367.50"></text></g><g><title>syscall (27,749,376 samples, 0.03%)</title><rect x="99.9688%" y="341" width="0.0312%" height="15" fill="rgb(206,173,20)" fg:x="88990001706" fg:w="27749376"/><text x="100.2188%" y="351.50"></text></g><g><title>[unknown] (27,749,376 samples, 0.03%)</title><rect x="99.9688%" y="325" width="0.0312%" height="15" fill="rgb(233,88,34)" fg:x="88990001706" fg:w="27749376"/><text x="100.2188%" y="335.50"></text></g></svg></svg>